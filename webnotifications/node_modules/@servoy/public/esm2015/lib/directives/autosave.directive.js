import { Directive, HostListener } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../services/servoy_public.service";
export class AutosaveDirective {
    constructor(servoyService, elementRef) {
        this.servoyService = servoyService;
        this.elementRef = elementRef;
    }
    onClick(target) {
        if (target == this.elementRef.nativeElement || target.parentNode == this.elementRef.nativeElement) {
            this.servoyService.callService('applicationServerService', 'autosave', {}, true);
        }
    }
}
AutosaveDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0, type: AutosaveDirective, deps: [{ token: i1.ServoyPublicService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
AutosaveDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.0.2", type: AutosaveDirective, selector: "[svyAutosave]", host: { listeners: { "click": "onClick($event.target)" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0, type: AutosaveDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[svyAutosave]'
                }]
        }], ctorParameters: function () { return [{ type: i1.ServoyPublicService }, { type: i0.ElementRef }]; }, propDecorators: { onClick: [{
                type: HostListener,
                args: ['click', ['$event.target']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0b3NhdmUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc2Vydm95LXB1YmxpYy9zcmMvbGliL2RpcmVjdGl2ZXMvYXV0b3NhdmUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUcsWUFBWSxFQUFhLE1BQU0sZUFBZSxDQUFDOzs7QUFNcEUsTUFBTSxPQUFPLGlCQUFpQjtJQUU1QixZQUFvQixhQUFrQyxFQUFVLFVBQXNCO1FBQWxFLGtCQUFhLEdBQWIsYUFBYSxDQUFxQjtRQUFVLGVBQVUsR0FBVixVQUFVLENBQVk7SUFDdEYsQ0FBQztJQUdELE9BQU8sQ0FBQyxNQUFNO1FBQ1osSUFBSSxNQUFNLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLElBQUksTUFBTSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRTtZQUNqRyxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQywwQkFBMEIsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ2xGO0lBQ0gsQ0FBQzs7OEdBVlUsaUJBQWlCO2tHQUFqQixpQkFBaUI7MkZBQWpCLGlCQUFpQjtrQkFIN0IsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsZUFBZTtpQkFDMUI7bUlBT0MsT0FBTztzQkFETixZQUFZO3VCQUFDLE9BQU8sRUFBRSxDQUFDLGVBQWUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSAsIEhvc3RMaXN0ZW5lciwgRWxlbWVudFJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTZXJ2b3lQdWJsaWNTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvc2Vydm95X3B1YmxpYy5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3N2eUF1dG9zYXZlXSdcbn0pXG5leHBvcnQgY2xhc3MgQXV0b3NhdmVEaXJlY3RpdmUge1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc2Vydm95U2VydmljZTogU2Vydm95UHVibGljU2VydmljZSwgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50LnRhcmdldCddKVxuICBvbkNsaWNrKHRhcmdldCk6IHZvaWQge1xuICAgIGlmICh0YXJnZXQgPT0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQgfHwgdGFyZ2V0LnBhcmVudE5vZGUgPT0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQpIHtcbiAgICAgIHRoaXMuc2Vydm95U2VydmljZS5jYWxsU2VydmljZSgnYXBwbGljYXRpb25TZXJ2ZXJTZXJ2aWNlJywgJ2F1dG9zYXZlJywge30sIHRydWUpO1xuICAgIH1cbiAgfVxufVxuIl19