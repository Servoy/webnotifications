{"version":3,"file":"servoy-public.js","sources":["../../../../projects/servoy-public/src/lib/basecomponent.ts","../../../../projects/servoy-public/src/lib/deferred.ts","../../../../projects/servoy-public/src/lib/jsevent.ts","../../../../projects/servoy-public/src/lib/services/windowref.service.ts","../../../../projects/servoy-public/src/lib/logger.service.ts","../../../../projects/servoy-public/src/lib/servoy_api.ts","../../../../projects/servoy-public/src/lib/tooltip/tooltip.service.ts","../../../../projects/servoy-public/src/lib/tooltip/tooltip.directive.ts","../../../../projects/servoy-public/src/lib/services/servoy_public.service.ts","../../../../projects/servoy-public/src/lib/directives/decimalkeyconverter.directive.ts","../../../../projects/servoy-public/src/lib/format/pipes.ts","../../../../projects/servoy-public/src/lib/format/formatting.service.ts","../../../../projects/servoy-public/src/lib/format/format.pipe.ts","../../../../projects/servoy-public/src/lib/format/emptyvalue.pipe.ts","../../../../projects/servoy-public/src/lib/directives/startedit.directive.ts","../../../../projects/servoy-public/src/lib/directives/imagemediaid.directive.ts","../../../../projects/servoy-public/src/lib/directives/autosave.directive.ts","../../../../projects/servoy-public/src/lib/directives/upload.directive.ts","../../../../projects/servoy-public/src/lib/format/maskformat.ts","../../../../projects/servoy-public/src/lib/format/formatcontrolvalueaccessor.directive.ts","../../../../projects/servoy-public/src/lib/directives/sablotabseq.directive.ts","../../../../projects/servoy-public/src/lib/spectypes.service.ts","../../../../projects/servoy-public/src/lib/servoy_public.module.ts","../../../../projects/servoy-public/src/lib/utils/property_utils.ts","../../../../projects/servoy-public/src/lib/utils/date_utils.ts","../../../../projects/servoy-public/src/lib/testing/publictesting.module.ts","../../../../projects/servoy-public/src/lib/testing/utils.ts","../../../../projects/servoy-public/src/servoy-public.ts"],"sourcesContent":["import { OnInit, AfterViewInit, OnChanges, SimpleChanges, Input, Renderer2, ElementRef, ViewChild, Directive, ChangeDetectorRef, OnDestroy, Injectable } from '@angular/core';\r\nimport { ServoyApi } from './servoy_api';\r\n\r\n@Directive()\r\n// eslint-disable-next-line\r\nexport class ServoyBaseComponent<T extends HTMLElement> implements AfterViewInit, OnInit, OnChanges, OnDestroy {\r\n    @Input() name: string;\r\n    @Input() servoyApi: ServoyApi;\r\n    @Input() servoyAttributes: {  [property: string]: string };\r\n\r\n    @ViewChild('element', { static: false }) elementRef: ElementRef<T>;\r\n\r\n    private viewStateListeners: Set<IViewStateListener> = new Set();\r\n    private componentContributor: ComponentContributor;\r\n    private initialized: boolean;\r\n    private changes: SimpleChanges;\r\n\r\n    constructor(protected readonly renderer: Renderer2, protected cdRef: ChangeDetectorRef) {\r\n        this.componentContributor = new ComponentContributor();\r\n    }\r\n\r\n    // final method, do not override\r\n    ngOnInit() {\r\n        this.initializeComponent();\r\n        this.servoyApi.registerComponent(this);\r\n    }\r\n\r\n    // final method, do not override\r\n    ngAfterViewInit() {\r\n        this.initializeComponent();\r\n        if (this.elementRef && this.changes) {\r\n            this.svyOnChanges(this.changes);\r\n            this.changes = null;\r\n        }\r\n        this.cdRef.detectChanges();\r\n    }\r\n\r\n    // final method, do not override\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.initializeComponent();\r\n        if (!this.elementRef) {\r\n            if (this.changes == null) {\r\n                this.changes = changes;\r\n            } else {\r\n                for (const property of Object.keys(changes)) {\r\n                    this.changes[property] = changes[property];\r\n                }\r\n            }\r\n        } else {\r\n            if (this.changes == null) {\r\n                this.svyOnChanges(changes);\r\n            } else {\r\n                for (const property of Object.keys(changes)) {\r\n                    this.changes[property] = changes[property];\r\n                }\r\n                this.svyOnChanges(this.changes);\r\n                this.changes = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.servoyApi.unRegisterComponent(this);\r\n    }\r\n\r\n    // our init event that is called when dom is ready\r\n    svyOnInit() {\r\n        this.addAttributes();\r\n        this.componentContributor.componentCreated(this);\r\n        this.viewStateListeners.forEach(listener => listener.afterViewInit());\r\n    }\r\n\r\n    // our change event that is called when dom is ready\r\n    svyOnChanges(_changes: SimpleChanges) {\r\n    }\r\n\r\n    public detectChanges() {\r\n        this.cdRef.detectChanges();\r\n    }\r\n    /**\r\n     * this should return the main native element (like the first div)\r\n     */\r\n    public getNativeElement(): T {\r\n        return this.elementRef ? this.elementRef.nativeElement : null;\r\n    }\r\n\r\n    /**\r\n     * sub classes can return a different native child then the default main element.\r\n     * used currently only for horizontal aligment\r\n     */\r\n    public getNativeChild(): any {\r\n        return this.elementRef.nativeElement;\r\n    }\r\n\r\n    public getRenderer(): Renderer2 {\r\n        return this.renderer;\r\n    }\r\n\r\n    public getWidth(): number {\r\n        return (this.getNativeElement().parentNode.parentNode as HTMLElement).offsetWidth;\r\n    }\r\n\r\n    public getHeight(): number {\r\n        return (this.getNativeElement().parentNode.parentNode as HTMLElement).offsetHeight;\r\n    }\r\n\r\n    public getLocationX(): number {\r\n        return (this.getNativeElement().parentNode.parentNode as HTMLElement).offsetLeft;\r\n    }\r\n\r\n    public getLocationY(): number {\r\n        return (this.getNativeElement().parentNode.parentNode as HTMLElement).offsetTop;\r\n    }\r\n\r\n    public addViewStateListener(listener: IViewStateListener) {\r\n        this.viewStateListeners.add(listener);\r\n    }\r\n\r\n    public removeViewStateListener(listener: IViewStateListener) {\r\n        this.viewStateListeners.delete(listener);\r\n    }\r\n\r\n    protected initializeComponent() {\r\n        if (!this.initialized && this.elementRef) {\r\n            this.initialized = true;\r\n            this.svyOnInit();\r\n        }\r\n    }\r\n\r\n    protected addAttributes() {\r\n        if (!this.servoyAttributes) return;\r\n        for (const key of Object.keys(this.servoyAttributes)) {\r\n             this.renderer.setAttribute(this.getNativeElement(), key, this.servoyAttributes[key]);\r\n        }\r\n    }\r\n}\r\n\r\nexport interface IViewStateListener {\r\n    afterViewInit(): void;\r\n}\r\n\r\n@Injectable()\r\nexport class ComponentContributor {\r\n    private static listeners: Set<IComponentContributorListener> = new Set();\r\n\r\n    public componentCreated(component: ServoyBaseComponent<any>) {\r\n        ComponentContributor.listeners.forEach(listener => listener.componentCreated(component));\r\n    }\r\n\r\n    public addComponentListener(listener: IComponentContributorListener) {\r\n       ComponentContributor.listeners.add(listener);\r\n    }\r\n}\r\n\r\nexport interface IComponentContributorListener {\r\n\r\n    componentCreated(component: ServoyBaseComponent<any>): void;\r\n\r\n}\r\n","export interface IDeferred<T> {\r\n    readonly promise: Promise<T>;\r\n    reject( reason );\r\n    resolve( value: T );\r\n}\r\n\r\nexport class Deferred <T> implements IDeferred<T> {\r\n    public readonly promise: Promise<T>;\r\n    private _resolve: ( value ) => void;\r\n    private _reject: ( reason ) => void;\r\n    constructor() {\r\n        this.promise = new Promise<T>(( resolve, reject ) => {\r\n            this._reject = reject;\r\n            this._resolve = resolve;\r\n        } );\r\n    }\r\n\r\n    public reject( reason ) {\r\n        this._reject( reason );\r\n    }\r\n\r\n    public resolve( value: T ) {\r\n        this._resolve( value );\r\n    }\r\n}\r\n","export class JSEvent {\r\n    public formName?: string;\r\n    public elementName?: string;\r\n    public svyType: string;\r\n    public eventType: string;\r\n    public modifiers?: number;\r\n    public x?: number;\r\n    public y?: number;\r\n    public timestamp: number;\r\n    public data? : any;\r\n}\r\n\r\nexport interface EventLike {\r\n    target: EventTarget;\r\n    altKey?: boolean;\r\n    shiftKey?: boolean;\r\n    ctrlKey?: boolean;\r\n    metaKey?: boolean;\r\n    pageX? : number;\r\n    pageY? : number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nfunction getWindow(): Window {\r\n    return window;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WindowRefService {\r\n    get nativeWindow(): Window {\r\n        return getWindow();\r\n    }\r\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { WindowRefService } from './services/windowref.service';\r\n\r\n// log levels for when debugEnabled(true) is called - if that is false, these levels are irrelevant\r\n// any custom debug levels can be used as well - these are just stored here so that custom code can test the level and see if it should log its message\r\nexport enum LogLevel {\r\n    ERROR = 1,\r\n    WARN,\r\n    INFO,\r\n    DEBUG,\r\n    SPAM\r\n}\r\n\r\nexport class LogConfiguration {\r\n    constructor(public isDebugMode: boolean = false, public level: LogLevel= LogLevel.WARN) {\r\n    }\r\n}\r\n\r\ndeclare global {\r\n    // extend the existing window interface with the new log provider property\r\n    interface Window { svyLogConfiguration: LogConfiguration; logFactory: LoggerFactory; logLevels: {[property: string]: LogLevel}; console: Console }\r\n}\r\n\r\nconst noop = (): any => undefined;\r\n\r\nexport class LoggerService {\r\n    private console: Console;\r\n    private enabled = false;\r\n\r\n    constructor(windowRefService: WindowRefService, private svyLogConfiguration: LogConfiguration, private className: string ) {\r\n        this.console = windowRefService.nativeWindow.console;\r\n    }\r\n\r\n    public buildMessage(message: string | ( () => string )) {\r\n        if (this.enabled) {\r\n            return message instanceof Function ? message() : message;\r\n        }\r\n    }\r\n\r\n    get spam() {\r\n        if ( this.svyLogConfiguration.level >= LogLevel.SPAM ) {\r\n            this.enabled = true;\r\n            return this.console.debug.bind(this.console, this.getTime() + ' SPAM ' + this.className + ' - ');\r\n        }\r\n        this.enabled = false;\r\n        return noop;\r\n    }\r\n\r\n    get debug() {\r\n        if ( this.svyLogConfiguration.isDebugMode || this.svyLogConfiguration.level >= LogLevel.DEBUG ) {\r\n            this.enabled = true;\r\n            return this.console.debug.bind(this.console, this.getTime() + ' DEBUG ' + this.className + ' - ');\r\n        }\r\n        this.enabled = false;\r\n        return noop;\r\n    }\r\n\r\n    get info() {\r\n        if ( this.svyLogConfiguration.isDebugMode || this.svyLogConfiguration.level >= LogLevel.INFO ) {\r\n            this.enabled = true;\r\n            return this.console.info.bind(this.console, this.getTime() + ' INFO ' + this.className + ' - ');\r\n        }\r\n        this.enabled = false;\r\n        return noop;\r\n    }\r\n\r\n    get warn() {\r\n        if ( this.svyLogConfiguration.isDebugMode || this.svyLogConfiguration.level >= LogLevel.WARN ) {\r\n            this.enabled = true;\r\n            return this.console.warn.bind(this.console, this.getTime() + ' WARN ' + this.className + ' - ');\r\n        }\r\n        this.enabled = false;\r\n        return noop;\r\n    }\r\n\r\n    get error() {\r\n        if ( this.svyLogConfiguration.isDebugMode || this.svyLogConfiguration.level >= LogLevel.ERROR ) {\r\n            this.enabled = true;\r\n            return this.console.error.bind(this.console, this.getTime() + ' ERROR ' + this.className + ' - ');\r\n        }\r\n        this.enabled = false;\r\n        return noop;\r\n    }\r\n\r\n    public toggleDebugMode() {\r\n        return this.svyLogConfiguration.isDebugMode = !this.svyLogConfiguration.isDebugMode;\r\n    }\r\n\r\n    get logLevel() {\r\n        return this.svyLogConfiguration.level;\r\n    }\r\n\r\n    set logLevel(level: LogLevel) {\r\n        this.svyLogConfiguration.level = level;\r\n    }\r\n\r\n    private getTime(): string {\r\n        const time = new Date();\r\n        return time.getHours() + ':' + time.getMinutes() + ':' + time.getSeconds();\r\n    }\r\n }\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggerFactory {\r\n\r\n    private instances: any = {};\r\n    private defaultLogConfiguration: LogConfiguration;\r\n\r\n    constructor(private windowRefService: WindowRefService ) {\r\n        windowRefService.nativeWindow.logFactory = this;\r\n        this.defaultLogConfiguration = windowRefService.nativeWindow.svyLogConfiguration;\r\n        if ( this.defaultLogConfiguration == null ) {\r\n            this.defaultLogConfiguration = new LogConfiguration();\r\n            windowRefService.nativeWindow.svyLogConfiguration = this.defaultLogConfiguration;\r\n            windowRefService.nativeWindow.logLevels = {error: LogLevel.ERROR, debug: LogLevel.DEBUG, info: LogLevel.INFO, warn: LogLevel.WARN, spam: LogLevel.SPAM};\r\n        }\r\n    }\r\n\r\n    public getLogger(cls: any): LoggerService {\r\n        if (this.instances[cls] === undefined) {\r\n            this.instances[cls] = new LoggerService(this.windowRefService, new LogConfiguration(this.defaultLogConfiguration.isDebugMode, this.defaultLogConfiguration.level), cls);\r\n        }\r\n        return this.instances[cls];\r\n    }\r\n}\r\n","import { ServoyBaseComponent } from \"./basecomponent\";\r\n\r\nexport abstract class ServoyApi {\r\n    public abstract formWillShow(formname: string, relationname?: string, formIndex?: number): Promise<boolean>;\r\n    public abstract hideForm(formname: string, relationname?: string, formIndex?: number,\r\n        formNameThatWillShow?: string, relationnameThatWillBeShown?: string, formIndexThatWillBeShown?: number): Promise<boolean>;\r\n\r\n    public abstract startEdit(propertyName: string);\r\n\r\n    public abstract apply(propertyName: string, value: any);\r\n\r\n    public abstract callServerSideApi(methodName: string, args: Array<any>);\r\n\r\n    public abstract getFormComponentElements(_propertyName: string, _formComponentValue: any);\r\n\r\n    public abstract isInDesigner(): boolean;\r\n\r\n    public abstract trustAsHtml(): boolean;\r\n\r\n    public abstract isInAbsoluteLayout(): boolean;\r\n    public abstract getMarkupId(): string;\r\n\r\n    public abstract getFormName(): string;\r\n\r\n    public abstract registerComponent(component: ServoyBaseComponent<any>);\r\n\r\n    public abstract unRegisterComponent(component: ServoyBaseComponent<any>);\r\n\r\n    public abstract getClientProperty(key);\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { WindowRefService } from '../services/windowref.service';\r\n\n@Injectable()\nexport class TooltipService {\n    isTooltipActive: Subject<boolean>;\n    tipInitialTimeout: any;\n    tipTimeout: any;\n    private tooltipDiv: HTMLDivElement;\n    private tipmousemouveEventX: any;\n    private tipmousemouveEventY: any;\n    private tipmousemouveEventIsPage: boolean;\r\n    private doc: Document;\n    constructor(@Inject(DOCUMENT) _doc: any, private windowRefService: WindowRefService) {\n        this.isTooltipActive = new Subject<boolean>();\r\n        this.doc = _doc;\n    }\n\r\n\r\n    public showTooltip(event: MouseEvent, message: string, initialDelay: number, dismissDelay: number) {\r\n        let e = event;\r\n        if (!e) e = this.windowRefService.nativeWindow.event as MouseEvent;\r\n\r\n        let targ;\r\n        if (e.target) targ = e.target;\r\n        else if (e.srcElement) targ = e.srcElement;\r\n        if (targ.nodeType === 3) // defeat Safari bug\r\n            targ = targ.parentNode;\r\n\r\n        if (targ.tagName && targ.tagName.toLowerCase() === 'option') { // stop tooltip if over option element\r\n            this.hideTooltip();\r\n            return;\r\n        }\r\n\r\n        const tDiv = this.getTooltipDiv();\r\n        tDiv.innerHTML = message;\r\n        tDiv.style.zIndex = '1600';\r\n        tDiv.style.width = '';\r\n        tDiv.style.overflow = 'hidden';\r\n\r\n        this.tipmousemove(e);\r\n        if (this.doc.addEventListener) {\r\n            this.doc.addEventListener('mousemove', this.tipmousemove, false);\r\n        }\r\n        this.tipInitialTimeout = setTimeout(() => this.adjustAndShowTooltip(dismissDelay), initialDelay);\r\n    }\r\n\r\n    public hideTooltip() {\r\n        this.internalHideTooltip();\r\n    }\r\n\n    private getTooltipDiv(): HTMLDivElement {\n        if (!this.tooltipDiv) {\n            this.tooltipDiv = this.doc.createElement('div');\n            this.tooltipDiv.id = 'mktipmsg';\n            this.tooltipDiv.className = 'mktipmsg tooltip-inner'; // tooltip-inner class is also used by ui-bootstrap-tpls-0.10.0\n            this.doc.getElementsByTagName('body')[0].appendChild(this.tooltipDiv);\n        }\n        return this.tooltipDiv;\n    }\n\n    private tipmousemove = (e: MouseEvent) => {\n        if (e.pageX || e.pageY) {\n            this.tipmousemouveEventIsPage = true;\n            this.tipmousemouveEventX = e.pageX;\n            this.tipmousemouveEventY = e.pageY;\n        } else if (e.clientX || e.clientY) {\n            this.tipmousemouveEventIsPage = false;\n            this.tipmousemouveEventX = e.clientX;\n            this.tipmousemouveEventY = e.clientY;\n        }\n    };\n\n    private adjustAndShowTooltip(dismissDelay: number) {\n        let x = 0;\n        let y = 0;\n\n        if (this.tipmousemouveEventX || this.tipmousemouveEventY) {\n            if (this.tipmousemouveEventIsPage) {\n                x = this.tipmousemouveEventX;\n                y = this.tipmousemouveEventY;\n            } else {\n                x = this.tipmousemouveEventX + this.doc.body.scrollLeft + this.doc.documentElement.scrollLeft;\n                y = this.tipmousemouveEventY + this.doc.body.scrollTop + this.doc.documentElement.scrollTop;\n            }\n        }\n\n        let wWidth = 0; let wHeight = 0;\n        if (typeof ( this.windowRefService.nativeWindow.innerWidth) == 'number') {\n            //Non-IE\n            wWidth =  this.windowRefService.nativeWindow.innerWidth;\n            wHeight =  this.windowRefService.nativeWindow.innerHeight;\n        } else if (this.doc.documentElement && (this.doc.documentElement.clientWidth || this.doc.documentElement.clientHeight)) {\n            //IE 6+ in 'standards compliant mode'\n            wWidth = this.doc.documentElement.clientWidth;\n            wHeight = this.doc.documentElement.clientHeight;\n        }\n\n\n        const tDiv = this.getTooltipDiv();\n        tDiv.style.left = x + 10 + 'px';\n        tDiv.style.top = y + 10 + 'px';\n        tDiv.style.display = 'block';\n        const tooltipOffsetWidth = x + 10 + tDiv.offsetWidth;\n\n        if (wWidth < tooltipOffsetWidth) {\n            let newLeft = x - 10 - tDiv.offsetWidth;\n            if (newLeft < 0) {\n                newLeft = 0;\n                tDiv.style.width = x - 10 + 'px';\n            }\n            if (newLeft === 0)\n                newLeft = tDiv.offsetWidth;\n            tDiv.style.left = newLeft + 'px';\n        }\n\n        const tooltipOffsetHeight = y + 10 + tDiv.offsetHeight;\n        if (wHeight < tooltipOffsetHeight) {\n            const newTop = y - 10 - tDiv.offsetHeight;\n            tDiv.style.top = newTop + 'px';\n        }\n        this.isTooltipActive.next(true);\n        this.tipTimeout = setTimeout(() => this.hideTooltip(), dismissDelay);\n\n\n    }\n\r\n    private internalHideTooltip() {\r\n        if (this.doc.removeEventListener)\r\n           this.doc.removeEventListener('mousemove', this.tipmousemove, false);\r\n        clearTimeout(this.tipInitialTimeout);\r\n        clearTimeout(this.tipTimeout);\r\n\r\n        const tDiv = this.getTooltipDiv();\r\n        tDiv.style.display = 'none';\r\n        this.isTooltipActive.next(false);\r\n    }\n}\n\n\n\n\n\n","import {Directive, HostListener, Input, OnDestroy} from '@angular/core';\nimport {TooltipService} from './tooltip.service';\n\n@Directive({ selector: '[svyTooltip]' })\nexport class TooltipDirective implements OnDestroy {\n\n  @Input('svyTooltip') tooltipText: string;\n  isActive = false;\n\n  constructor(private tooltipService: TooltipService){\n    this.tooltipService.isTooltipActive.subscribe(a => {\n      this.isActive = a;\n    });\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(event): void {\n    if(this.tooltipText)\n        this.tooltipService.showTooltip(event, this.tooltipText, 750, 5000);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.tooltipService.hideTooltip();\n  }\n\n  @HostListener('click')\n  onClick(): void {\n    this.tooltipService.hideTooltip();\n  }\n\n  @HostListener('contextmenu')\n  onContextMenu(): void {\n    this.tooltipService.hideTooltip();\n  }\n\n  ngOnDestroy(): void {\n    this.tooltipService.hideTooltip();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { EventLike, JSEvent } from '../jsevent';\r\n\r\n@Injectable()\r\nexport abstract class ServoyPublicService {\r\n    public abstract showFileOpenDialog(title: string, multiselect: boolean, acceptFilter: string, url: string): void;\r\n    public abstract createJSEvent(event: EventLike, eventType: string, contextFilter?: string, contextFilterElement?: any): JSEvent;\r\n    public abstract getLocale(): string;\r\n    public abstract callService<T>(serviceName: string, methodName: string, argsObject: any, async?: boolean): Promise<T>;\r\n    public abstract getI18NMessages(...keys: string[]): Promise<any>;\r\n    public abstract executeInlineScript<T>(formname: string, script: string, params: any[]): Promise<T>;\r\n    public abstract generateUploadUrl(formname: string, componentName: string, propertyName: string): string;\r\n    public abstract generateServiceUploadUrl(serviceName: string, apiFunctionName: string): string;\r\n    public abstract getFormCacheByName(containedForm: string): IFormCache;\r\n}\r\n\r\nexport interface IFormCache {\r\n    absolute: boolean;\r\n    size: {width: number; height: number};\r\n    getComponent(name: string): IComponentCache;\r\n}\r\n\r\nexport interface IComponentCache {\r\n    name: string;\r\n    model: { [property: string]: any };\r\n}\r\n","import { Directive , Input , ElementRef, HostListener} from '@angular/core';\nimport { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport { ServoyPublicService } from '../services/servoy_public.service';\nimport { Format } from '../format/formatting.service';\n\n@Directive({\n  selector: '[svyDecimalKeyConverter]'\n})\nexport class DecimalkeyconverterDirective {\n\n  @Input('svyDecimalKeyConverter') svyFormat: Format;\n  private element: HTMLInputElement;\n\n  public constructor(private el: ElementRef, private servoyService: ServoyPublicService) {\n      this.element = el.nativeElement;\n  }\n\n  @HostListener('keydown', ['$event']) onKeypress(e: KeyboardEvent) {\n      if (e.which === 110 && this.svyFormat && this.svyFormat.type === 'NUMBER') {\n          const caretPos = this.element.selectionStart;\n          const startString = this.element.value.slice(0, caretPos);\n          const endString = this.element.value.slice(this.element.selectionEnd, this.element.value.length);\n          this.element.value = (startString + getLocaleNumberSymbol(this.servoyService.getLocale(), NumberSymbol.Decimal) + endString);\n          this.element.focus();\n          this.element.setSelectionRange(caretPos + 1, caretPos + 1);\n          if (e.preventDefault) e.preventDefault();\n      }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport {PropertyUtils} from '../utils/property_utils';\r\n\r\n@Pipe( { name: 'mnemonicletterFilter' } )\r\nexport class MnemonicletterFilterPipe implements PipeTransform {\r\n    transform( input: string, letter: string): string{\r\n        if(letter && input) return input.replace(letter, '<u>'+letter+'</u>');\r\n        return input;\r\n    }\r\n}\r\n@Pipe({name: 'notNullOrEmpty'})\r\nexport class NotNullOrEmptyPipe implements PipeTransform {\r\n  transform(value: any[], _args?: any): any {\r\n      if(value)\r\n        return value.filter(a => a && (a.realValue ||a.displayValue));\r\n      return value;\r\n  }\r\n}\r\n\r\n@Pipe( { name: 'htmlFilter' } )\r\nexport class HtmlFilterPipe implements PipeTransform {\r\n    transform( input: string): string{\r\n      if (input && input.indexOf && input.indexOf('<body') >=0 && input.lastIndexOf('</body') >=0) {\r\n        input = input.substring(input.indexOf('<body')+6,input.lastIndexOf('</body'));\r\n      }\r\n      return input;\r\n    }\r\n}\n\r\n@Pipe( { name: 'trustAsHtml' } )\r\nexport class TrustAsHtmlPipe implements PipeTransform {\r\n    constructor( private domSanitizer: DomSanitizer ) {\r\n    }\r\n\r\n    transform( input: string, trustAsHtml: boolean ): any {\r\n        if ( trustAsHtml ) {\r\n            return this.domSanitizer.bypassSecurityTrustHtml(input);\r\n        }\r\n        return input;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport numbro from 'numbro';\r\nimport { DateTime } from 'luxon';\r\nimport { ServoyPublicService } from '../services/servoy_public.service';\r\n\r\nconst MILLSIGN = '\\u2030';\r\n\r\nexport class Format {\r\n    display: string = null;\r\n    uppercase = false;\r\n    lowercase = false;\r\n    type: string = null;\r\n    isMask = false;\r\n    isRaw = false;\r\n    isNumberValidator = false;\r\n    edit: string = null;\r\n    placeHolder = '';\r\n    percent = '';\r\n    allowedCharacters = '';\r\n    maxLength = 0;\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class FormattingService {\r\n\r\n    constructor(private servoyService: ServoyPublicService) {\r\n    }\r\n\r\n    // formatting stufff\r\n    public format(data: any, format: Format, useEditFormat: boolean): string {\r\n        const formatString = useEditFormat ? format.edit : format.display;\r\n\r\n        if ((!format) || (!format.type) || ((typeof data === 'number') && isNaN(data))) {\r\n            if (!format && ((format.type === 'NUMBER') || (format.type === 'INTEGER')) && (typeof data === 'number') && !isNaN(data)) {\r\n                // make sure is always returned with correct type, otherwise compare will not work well\r\n                return data.toString();\r\n            }\r\n            return data;\r\n        }\r\n        if (data === undefined || data === null) return '';\r\n        if ((format.type === 'NUMBER') || (format.type === 'INTEGER')) {\r\n            return this.formatNumbers(data, formatString);\r\n        } else if (format.type === 'TEXT') {\r\n            let formattedValue = this.formatText(data, formatString);\r\n            if (format.uppercase) formattedValue = formattedValue.toUpperCase();\r\n            else if (format.lowercase) formattedValue = formattedValue.toLowerCase();\r\n            return formattedValue;\r\n        } else if (format.type === 'DATETIME') {\r\n            return this.formatDate(data, formatString);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    public testKeyPressed(event: KeyboardEvent, keyCode: number) {\r\n        let code: number;\r\n\r\n        if (!event) event = window.event as KeyboardEvent;\r\n        if (!event) return false;\r\n        if (event.keyCode) code = event.keyCode;\r\n        else if (event.which) code = event.which;\r\n        return code === keyCode;\r\n    }\r\n\r\n    // test numbers only\r\n    public testForNumbersOnly(e, keyChar, vElement, vFindMode, vCheckNumbers, vSvyFormat, skipMaxLength) {\r\n        if (!vFindMode && vCheckNumbers) {\r\n            if (this.testKeyPressed(e, 13) && e.target.tagName.toUpperCase() === 'INPUT') {\r\n                //do not looses focus, just apply the format and push value\r\n                vElement.dispatchEvent(new CustomEvent('change', { bubbles: true, detail: { text: () => vElement.value } }));\r\n            } else if (vSvyFormat.type === 'INTEGER') {\r\n                const currentLanguageNumeralSymbols = numbro.languageData();\r\n\r\n                if (keyChar === undefined || keyChar === null) {\r\n                    return this.numbersonly(e, false, currentLanguageNumeralSymbols.delimiters.decimal, currentLanguageNumeralSymbols.delimiters.thousands, currentLanguageNumeralSymbols.currency\r\n                        .symbol,\r\n                        vSvyFormat.percent, vElement, skipMaxLength === true ? 0 : vSvyFormat.maxLength);\r\n                } else {\r\n                    return this.numbersonlyForChar(keyChar, false, currentLanguageNumeralSymbols.delimiters.decimal, currentLanguageNumeralSymbols.delimiters.thousands,\r\n                        currentLanguageNumeralSymbols.currency.symbol, vSvyFormat.percent, vElement, skipMaxLength === true ? 0 : vSvyFormat.maxLength);\r\n                }\r\n            } else if (vSvyFormat.type === 'NUMBER' || ((vSvyFormat.type === 'TEXT') && vSvyFormat.isNumberValidator)) {\r\n                const currentLanguageNumeralSymbols = numbro.languageData();\r\n\r\n                if (keyChar === undefined || keyChar === null) {\r\n                    return this.numbersonly(e, true, currentLanguageNumeralSymbols.delimiters.decimal, currentLanguageNumeralSymbols.delimiters.thousands,\r\n                        currentLanguageNumeralSymbols.currency.symbol, vSvyFormat.percent, vElement, skipMaxLength === true ? 0 : vSvyFormat.maxLength);\r\n                } else {\r\n                    return this.numbersonlyForChar(keyChar, true, currentLanguageNumeralSymbols.delimiters.decimal, currentLanguageNumeralSymbols.delimiters.thousands,\r\n                        currentLanguageNumeralSymbols.currency.symbol, vSvyFormat.percent, vElement, skipMaxLength === true ? 0 : vSvyFormat.maxLength);\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // unformatting stuff\r\n\r\n    public unformat(data: any, servoyFormat: string, type: string, currentValue?: any) {\r\n        if ((!servoyFormat) || (!type) || (!data && data !== 0)) return data;\r\n        if ((type === 'NUMBER') || (type === 'INTEGER')) {\r\n            return this.unformatNumbers(data, servoyFormat);\r\n        } else if (type === 'TEXT') {\r\n            return data;\r\n        } else if (type === 'DATETIME') {\r\n            if ('' === data) return null;\r\n           servoyFormat = this.convertFormat(servoyFormat);\r\n            const d = DateTime.fromFormat(data, servoyFormat, {locale: this.servoyService.getLocale()}).toJSDate();\r\n            // if format has not year/month/day use the one from the current model value\r\n            // because luxon will just use current date\r\n            if (currentValue && !isNaN(currentValue.getTime())) {\r\n                if (servoyFormat.indexOf('y') === -1) {\r\n                    d.setFullYear(currentValue.getFullYear());\r\n                }\r\n                if (servoyFormat.indexOf('W') === -1 && servoyFormat.indexOf('o') === -1) {\r\n                    if (servoyFormat.indexOf('M') === -1) {\r\n                        d.setMonth(currentValue.getMonth());\r\n                    }\r\n                    if (servoyFormat.indexOf('d') === -1) {\r\n                        d.setDate(currentValue.getDate());\r\n                    }\r\n                }\r\n            }\r\n            return d;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    private unformatNumbers(data: any, format: string) { // todo throw error when not coresponding to format (reimplement with state machine)\r\n        if (data === '') return data;\r\n        //treat scientiffic numbers\r\n        if (data.toString().toLowerCase().indexOf('e') > -1 && !isNaN(data)) {\r\n            return new Number(data).valueOf();\r\n        }\r\n\r\n        let multFactor = 1;\r\n        const MILLSIGN = '\\u2030';\r\n        if (format.indexOf(MILLSIGN) > -1 && format.indexOf('\\'' + MILLSIGN + '\\'') == -1) {\r\n            multFactor *= 0.001;\r\n        }\r\n        if (format.indexOf('\\'') > -1) {\r\n            // replace the literals\r\n            const parts = format.split('\\'');\r\n            for (let i = 0; i < parts.length; i++) {\r\n                if (i % 2 === 1) {\r\n                    data = data.replace(new RegExp(parts[i], 'g'), '');\r\n                }\r\n            }\r\n        }\r\n        let ret = numbro(data).value();\r\n        ret *= multFactor;\r\n        return ret;\r\n    }\r\n\r\n    private numbersonly(e, decimal, decimalChar, groupingChar, currencyChar, percentChar, vElement, mlength) {\r\n        let key;\r\n\r\n        if (window.event) {\r\n            key = window.event['keyCode'];\r\n        } else if (e) {\r\n            key = e.which;\r\n        } else {\r\n            return true;\r\n        }\r\n\r\n        if ((key == null) || (key === 0) || (key === 8) || (key === 9) || (key === 13) || (key === 27) || (e.ctrlKey && key === 97) || (e.ctrlKey && key === 99) ||\r\n            (e.ctrlKey && key === 118) || (e.ctrlKey && key === 120)) { //added CTRL-A, X, C and V\r\n            return true;\r\n        }\r\n\r\n        const keychar = String.fromCharCode(key);\r\n        return this.numbersonlyForChar(keychar, decimal, decimalChar, groupingChar, currencyChar, percentChar, vElement, mlength);\r\n\r\n    }\r\n\r\n    private numbersonlyForChar(keychar, decimal, decimalChar, groupingChar, currencyChar, percentChar, vElement, mlength) {\r\n        const value = vElement.value;\r\n        if (mlength > 0 && value) {\r\n            let counter = 0;\r\n            if (('0123456789').indexOf(keychar) !== -1) counter++;\r\n            const stringLength = value.length;\r\n            for (let i = 0; i < stringLength; i++) {\r\n                if (('0123456789').indexOf(value.charAt(i)) !== -1) counter++;\r\n            }\r\n            const selectedTxt = this.getSelectedText(vElement);\r\n            if (selectedTxt) {\r\n                // selection will get deleted/replaced by typed key\r\n                for (let i = 0; i < selectedTxt.length; i++) {\r\n                    if (('0123456789').indexOf(selectedTxt.charAt(i)) !== -1) counter--;\r\n                }\r\n            }\r\n            if (counter > mlength) return false;\r\n        }\r\n\r\n        if ((('-0123456789').indexOf(keychar) > -1)) {\r\n            return true;\r\n        } else if (decimal && (keychar === decimalChar)) {\r\n            return true;\r\n        } else if (keychar === groupingChar) {\r\n            return true;\r\n        } else if (keychar === currencyChar) {\r\n            return true;\r\n        } else if (keychar === percentChar) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private getSelectedText(textarea) {\r\n        let sel = null;\r\n        if (textarea) {\r\n            const start = textarea['selectionStart'];\r\n            const end = textarea['selectionEnd'];\r\n            sel = textarea['value'].substring(start, end);\r\n        }\r\n        return sel;\r\n    }\r\n\r\n    private formatNumbers(data, servoyFormat: string): string {\r\n        if (!servoyFormat)\r\n            return data;\r\n        if (data === '')\r\n            return data;\r\n\r\n        data = Number(data); // just to make sure that if it was a string representing a number we turn it into a number\r\n        if (typeof data === 'number' && isNaN(data)) return ''; // cannot format something that is not a number\r\n\r\n        const initialData = data;\r\n        let patchedFormat = servoyFormat; // patched format for numeraljs format\r\n        let i; let j;\r\n        let prefix = '';\r\n        let sufix = '';\r\n\r\n\r\n        if (patchedFormat.indexOf(';') > 0) {\r\n            if (data < 0) {\r\n                patchedFormat = patchedFormat.split(';')[1];\r\n            } else patchedFormat = patchedFormat.split(';')[0];\r\n        }\r\n\r\n        if (data < 0) data *= -1;\r\n        if (patchedFormat.indexOf('\\u00A4') >= 0) {\r\n            patchedFormat = patchedFormat.replace(new RegExp('\\u00A4', 'g'), numbro.languageData().currency.symbol);\r\n        }\r\n        if (servoyFormat.indexOf('-') >= 0 && initialData >= 0 && servoyFormat.indexOf(';') < 0) {\r\n            patchedFormat = patchedFormat.replace(new RegExp('-', 'g'), '');\r\n        }\r\n\r\n        if (patchedFormat.indexOf('%') > -1 && patchedFormat.indexOf('\\'%\\'') === -1) {\r\n            data *= 100;\r\n        } else if (patchedFormat.indexOf(MILLSIGN) > -1 && patchedFormat.indexOf('\\'' + MILLSIGN + '\\'') === -1) {\r\n            data *= 1000;\r\n        }\r\n        let numberStart = patchedFormat.length;\r\n        let index = patchedFormat.indexOf('0');\r\n        if (index >= 0) {\r\n            numberStart = index;\r\n        }\r\n        index = patchedFormat.indexOf('#');\r\n        if (index >= 0 && index < numberStart) {\r\n            numberStart = index;\r\n        }\r\n        let numberEnd = 0;\r\n        index = patchedFormat.lastIndexOf('0');\r\n        if (index >= 0) {\r\n            numberEnd = index;\r\n        }\r\n        index = patchedFormat.lastIndexOf('#');\r\n        if (index >= 0 && index > numberEnd) {\r\n            numberEnd = index;\r\n        }\r\n\r\n        if (numberStart > 0) {\r\n            prefix = patchedFormat.substring(0, numberStart);\r\n        }\r\n\r\n        if (numberEnd < patchedFormat.length - 1) {\r\n            sufix = patchedFormat.substring(numberEnd + 1);\r\n        }\r\n\r\n        patchedFormat = patchedFormat.substring(numberStart, numberEnd + 1);\r\n        let ret;\r\n\r\n\r\n        prefix = prefix.replace(new RegExp('\\'', 'g'), '');\r\n        sufix = sufix.replace(new RegExp('\\'', 'g'), '');\r\n\r\n        if (servoyFormat.indexOf('-') === -1 && initialData < 0 && servoyFormat.indexOf(';') < 0) {\r\n            prefix = prefix + '-';\r\n        }\r\n        // scientific notation case\r\n        if (servoyFormat.indexOf('E') > -1) {\r\n            const frmt = /([0#.,]+)+E0+.*/.exec(patchedFormat)[1];\r\n            let integerDigits = 0;\r\n            let fractionalDigits = 0;\r\n            let countIntegerState = true;\r\n            for (i = 0; i < frmt.length; i++) {\r\n                const chr = frmt[i];\r\n                if (chr === '.') {\r\n                    countIntegerState = false;\r\n                    continue;\r\n                }\r\n                if (chr === ',') continue;\r\n                if (countIntegerState) {\r\n                    integerDigits++;\r\n                } else {\r\n                    fractionalDigits++;\r\n                }\r\n            }\r\n            ret = Number(data).toExponential(integerDigits + fractionalDigits);\r\n        } else {\r\n            // get min digits\r\n            let minLen = 0;\r\n            let optionalDigits = 0;\r\n            for (i = 0; i < patchedFormat.length; i++) {\r\n                if (patchedFormat[i] === '0') {\r\n                    minLen++;\r\n                } else if (patchedFormat[i] === '#' && minLen === 0) {\r\n                    optionalDigits++;\r\n                } else if (patchedFormat[i] === '.') {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            patchedFormat = patchedFormat.replace(new RegExp('(#+)', 'g'), '[$1]');\r\n            patchedFormat = patchedFormat.replace(new RegExp('#', 'g'), '0');\r\n\r\n            ret = numbro(data).format(patchedFormat);\r\n\r\n            // set min digits\r\n            if (minLen > 0) {\r\n                const retSplit = ret.split(numbro.languageData().delimiters.decimal);\r\n                for (i = 0; i < retSplit[0].length; i++) {\r\n                    if (retSplit[0][i] < '0' || retSplit[0][i] > '9') continue;\r\n                    for (j = i; j < retSplit[0].length; j++) {\r\n                        if (retSplit[0][j] >= '0' && retSplit[0][j] <= '9') continue;\r\n                        break;\r\n                    }\r\n                    const nrMissing0 = minLen - (j - i);\r\n                    if (nrMissing0 > 0) {\r\n                        ret = retSplit[0].substring(0, i);\r\n                        for (j = 0; j < nrMissing0; j++) ret += '0';\r\n                        ret += retSplit[0].substring(i);\r\n                        if (retSplit.length > 1) ret += (numbro.languageData().delimiters.decimal + retSplit[1]);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            // fix the optional digits\r\n            if (patchedFormat.indexOf(',') === -1 && optionalDigits > 0) {\r\n                let toEliminate = 0;\r\n                for (i = 0; i < ret.length; i++) {\r\n                    if (ret.charAt(i) === '0') {\r\n                        toEliminate++;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                if (toEliminate > 0) {\r\n                    if (toEliminate > optionalDigits) {\r\n                        toEliminate = optionalDigits;\r\n                    }\r\n                    ret = ret.substring(toEliminate);\r\n                    if (ret.indexOf(numbro.languageData().delimiters.decimal) === 0) {\r\n                        // we eliminated too much\r\n                        ret = '0' + ret;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return prefix + ret + sufix;\r\n    }\r\n\r\n    private formatText(data, servoyFormat: string): string {\r\n        if (!servoyFormat) return data;\r\n        const error = 'input string not corresponding to format : ' + data + ' , ' + servoyFormat;\r\n        let ret = '';\r\n        let isEscaping = false;\r\n        let offset = 0;\r\n        if (data && typeof data === 'number') {\r\n            data = data.toString();\r\n        }\r\n        for (let i = 0; i < servoyFormat.length; i++) {\r\n            const formatChar = servoyFormat[i];\r\n            const dataChar = data[i - offset];\r\n            if (dataChar === undefined) break;\r\n            if (isEscaping && formatChar !== '\\'') {\r\n                if (dataChar !== formatChar) throw error;\r\n                ret += dataChar;\r\n                continue;\r\n            }\r\n            switch (formatChar) {\r\n                case '\\'':\r\n                    isEscaping = !isEscaping;\r\n                    offset++;\r\n                    break;\r\n                case 'U':\r\n                    if (dataChar.match(/[a-zA-Z\\u00C0-\\u00ff]/) == null) throw error;\r\n                    ret += dataChar.toUpperCase();\r\n                    break;\r\n                case 'L':\r\n                    if (dataChar.match(/[a-zA-Z\\u00C0-\\u00ff]/) == null) throw error;\r\n                    ret += dataChar.toLowerCase();\r\n                    break;\r\n                case 'A':\r\n                    if (dataChar.match(/[0-9a-zA-Z\\u00C0-\\u00ff]/) == null) throw error;\r\n                    ret += dataChar;\r\n                    break;\r\n                case '?':\r\n                    if (dataChar.match(/[a-zA-Z\\u00C0-\\u00ff]/) == null) throw error;\r\n                    ret += dataChar;\r\n                    break;\r\n                case '*':\r\n                    ret += dataChar;\r\n                    break;\r\n                case 'H':\r\n                    if (dataChar.match(/[0-9a-fA-F]/) == null) throw error;\r\n                    ret += dataChar.toUpperCase();\r\n                    break;\r\n                case '#':\r\n                    if (dataChar.match(/[\\d]/) == null) throw error;\r\n                    ret += dataChar;\r\n                    break;\r\n                default:\r\n                    ret += formatChar;\r\n                    if (formatChar !== dataChar) offset++;\r\n                    break;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private formatDate(data, dateFormat: string): string {\r\n        if (!(data instanceof Date)) return data;\r\n        dateFormat = this.convertFormat(dateFormat);\r\n        const formatted  = DateTime.fromJSDate(data).setLocale(this.servoyService.getLocale()).toFormat(dateFormat);\r\n        return formatted.trim ? formatted.trim() : formatted;\r\n    }\r\n\r\n    private convertFormat(dateFormat: string): string {\r\n        if (!dateFormat) dateFormat = 'F'; // long date format of luxon\r\n        // adjust to luxon js formatting (from java simple date format)\r\n        dateFormat = dateFormat.replace(new RegExp('Y', 'g'), 'y');\r\n        dateFormat = dateFormat.replace(new RegExp('aa', 'g'), 'a');\r\n        dateFormat = dateFormat.replace(new RegExp('E', 'g'), 'EEE');\r\n        dateFormat = dateFormat.replace(new RegExp('u', 'g'), 'E');\r\n        dateFormat = dateFormat.replace(new RegExp('w', 'g'), 'W');\r\n        // no equivalent for K, just put h for now\r\n        dateFormat = dateFormat.replace(new RegExp('K','g'), 'h');\r\n        dateFormat = dateFormat.replace(new RegExp('k','g'), 'H');\r\n        dateFormat = dateFormat.replace(new RegExp('D','g'), 'o');\r\n        // if week is found then the year must be 'k' for luxon (iso week year)\r\n        if (dateFormat.indexOf('W') !== -1) {\r\n            dateFormat = dateFormat.replace(new RegExp('y', 'g'), 'k');\r\n        }\r\n        return dateFormat;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform} from '@angular/core';\r\nimport { Format, FormattingService } from './formatting.service';\r\n\r\n@Pipe( { name: 'formatFilter'} )\r\nexport class FormatFilterPipe implements PipeTransform {\r\n\r\n    public constructor(private formatService: FormattingService) {\r\n    }\r\n\r\n    transform( input: any, format: Format): any {\r\n        if (!format) return input;\r\n        return this.formatService.format(input, format, !format.display);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe( { name: 'emptyValue'} )\r\nexport class EmptyValueFilterPipe implements PipeTransform {\r\n\r\n    transform( input: any): any {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (input == '') return '\\u00A0';\r\n        return input;\r\n    }\r\n}\r\n","import { Directive , Input , HostListener} from '@angular/core';\nimport {LoggerService, LoggerFactory} from '../logger.service';\nimport { ServoyBaseComponent } from '../basecomponent';\n\n@Directive({\n  selector: '[svyStartEdit]'\n})\nexport class StartEditDirective {\n\n  @Input('svyStartEdit') dataProviderID: string;\n  @Input() hostComponent: ServoyBaseComponent<HTMLElement>;\n\n  private log: LoggerService;\n\n  public constructor(logFactory: LoggerFactory) {\n    this.log = logFactory.getLogger('StartEditDirective');\n  }\n\n  @HostListener('focus', ['$event']) onFocus(e: FocusEvent) {\n    if (!this.hostComponent) {\n      this.log.error('host component not found for the start edit directive use [hostComponent]=\"self\" besides this in the template (component must be extending ServoyBaseComponent)');\n    } else if (this.hostComponent.servoyApi && this.dataProviderID !== undefined) {\n      this.hostComponent.servoyApi.startEdit(this.dataProviderID);\n    } else {\n      this.log.error('Can\\'t call startEdit, missing servoyApi and dataProviderID for field ' + this.hostComponent);\n    }\n  }\n}\n","import { Directive, Input, SimpleChanges, OnChanges, ElementRef, Renderer2, OnDestroy } from '@angular/core';\nimport { ServoyBaseComponent } from '../basecomponent';\nimport { IViewStateListener } from '../basecomponent';\n\n@Directive({\n    selector: '[svyImageMediaId]'\n})\nexport class ImageMediaIdDirective implements OnChanges, IViewStateListener, OnDestroy {\n\n    @Input('svyImageMediaId') media: any;\n    @Input() hostComponent: ServoyBaseComponent<HTMLElement>;\n\n    private imgStyle: Map<string, any>;\n    private rollOverImgStyle: Map<string, any>;\n    private clearStyle: Map<string, any>;\n\n    public constructor(private _elemRef: ElementRef<HTMLElement>, private _renderer: Renderer2) {\n        this.clearStyle = new Map();\n        this.clearStyle.set('width', '0px');\n        this.clearStyle.set('height', '0px');\n        this.clearStyle.set('backgroundImage', '');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['hostComponent']) {\n            this.hostComponent.addViewStateListener(this);\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.hostComponent) {\n            this.hostComponent.removeViewStateListener(this);\n        }\n    }\n\n    afterViewInit() {\n        const nativeElement = this.hostComponent.getNativeElement();\n        const renderer = this.hostComponent.getRenderer();\n        renderer.listen(nativeElement, 'mouseenter', (e) => {\n            if (this.rollOverImgStyle) {\n                this.setCSSStyle(this.rollOverImgStyle);\n            }\n        });\n\n        renderer.listen(nativeElement, 'mouseleave', (e) => {\n            if (this.rollOverImgStyle) {\n                if (this.imgStyle) {\n                    this.setCSSStyle(this.imgStyle);\n                } else {\n                    this.setCSSStyle(this.clearStyle);\n                }\n            }\n        });\n        this.setImageStyle();\n    }\n\n    private setImageStyle(): void {\n        if (this.media && (this.media.img || this.media.rollOverImg) || this.rollOverImgStyle || this.imgStyle) {\n            const componentSize = {\r\n                width: (this._elemRef.nativeElement.parentNode.parentNode as HTMLElement).clientWidth,\n                height: (this._elemRef.nativeElement.parentNode.parentNode as HTMLElement).clientHeight\r\n            };\n            if (componentSize.height === 0 || componentSize.width === 0)\n                setTimeout(() => this.setImageStyle(), 100);\n            else {\n                const mediaOptions = this.media.mediaOptions;\n                if (this.media.rollOverImg) {\n                    this.rollOverImgStyle = this.parseImageOptions(this.media.rollOverImg, mediaOptions, componentSize);\n                } else {\n                    this.rollOverImgStyle = null;\n                }\n                if (this.media.img) {\n                    this.imgStyle = this.parseImageOptions(this.media.img, mediaOptions, componentSize);\n                    this.setCSSStyle(this.imgStyle);\n                } else {\n                    this.imgStyle = null;\n                    this.setCSSStyle(this.clearStyle);\n                }\n            }\n        }\n    }\n\n    private parseImageOptions(image, mediaOptions: number, componentSize): Map<string, any> {\n        const bgstyle = new Map();\n        bgstyle.set('background-image', 'url(\\'' + image + '\\')');\n        bgstyle.set('background-repeat', 'no-repeat');\n        bgstyle.set('background-position', 'left');\n        bgstyle.set('display', 'inline-block');\n        bgstyle.set('vertical-align', 'middle');\n        if (mediaOptions === undefined) mediaOptions = 14; // reduce-enlarge & keep aspect ration\n        const mediaKeepAspectRatio = mediaOptions === 0 || ((mediaOptions & 8) === 8);\n\n        // default  img size values\n        let imgWidth = 16;\n        let imgHeight = 16;\n\n        if (image.indexOf('imageWidth=') > 0 && image.indexOf('imageHeight=') > 0) {\n            const vars = {};\n            image.replace(/[?&]+([^=&]+)=([^&]*)/gi,\n                (m, key, value) => {\n                    vars[key] = value;\n                });\n            imgWidth = vars['imageWidth'];\n            imgHeight = vars['imageHeight'];\n        }\n\n        const widthChange = imgWidth / componentSize.width;\n        const heightChange = imgHeight / componentSize.height;\n\n        if (widthChange > 1.01 || heightChange > 1.01 || widthChange < 0.99 || heightChange < 0.99) {\n            if ((mediaOptions & 6) === 6) {\n                if (mediaKeepAspectRatio) {\n                    if (widthChange > heightChange) {\n                        imgWidth = imgWidth / widthChange;\n                        imgHeight = imgHeight / widthChange;\n                    } else {\n                        imgWidth = imgWidth / heightChange;\n                        imgHeight = imgHeight / heightChange;\n                    }\n                } else {\n                    imgWidth = componentSize.width;\n                    imgHeight = componentSize.height;\n                }\n            } else if ((mediaOptions & 2) == 2) {\n                if (widthChange > 1.01 && heightChange > 1.01) {\n                    if (mediaKeepAspectRatio) {\n                        if (widthChange > heightChange) {\n                            imgWidth = imgWidth / widthChange;\n                            imgHeight = imgHeight / widthChange;\n                        } else {\n                            imgWidth = imgWidth / heightChange;\n                            imgHeight = imgHeight / heightChange;\n                        }\n                    } else {\n                        imgWidth = componentSize.width;\n                        imgHeight = componentSize.height;\n                    }\n                } else if (widthChange > 1.01) {\n                    imgWidth = imgWidth / widthChange;\n                    if (mediaKeepAspectRatio) {\n                        imgHeight = imgHeight / widthChange;\n                    } else {\n                        imgHeight = componentSize.height;\n                    }\n                } else if (heightChange > 1.01) {\n                    imgHeight = imgHeight / heightChange;\n                    if (mediaKeepAspectRatio) {\n                        imgWidth = imgWidth / heightChange;\n                    } else {\n                        imgWidth = componentSize.width;\n                    }\n                }\n            } else if ((mediaOptions & 4) == 4) {\n                if (widthChange < 0.99 && heightChange < 0.99) {\n                    if (mediaKeepAspectRatio) {\n                        if (widthChange > heightChange) {\n                            imgWidth = imgWidth / widthChange;\n                            imgHeight = imgHeight / widthChange;\n                        } else {\n                            imgWidth = imgWidth / heightChange;\n                            imgHeight = imgHeight / heightChange;\n                        }\n                    } else {\n                        imgWidth = componentSize.width;\n                        imgHeight = componentSize.height;\n                    }\n                } else if (widthChange < 0.99) {\n                    imgWidth = imgWidth / widthChange;\n                    if (mediaKeepAspectRatio) {\n                        imgHeight = imgHeight / widthChange;\n                    } else {\n                        imgHeight = componentSize.height;\n                    }\n                } else if (heightChange < 0.99) {\n                    imgHeight = imgHeight / heightChange;\n                    if (mediaKeepAspectRatio) {\n                        imgWidth = imgWidth / heightChange;\n                    } else {\n                        imgWidth = componentSize.width;\n                    }\n                }\n            }\n        }\n\n        bgstyle.set('background-size', mediaKeepAspectRatio ? 'contain' : '100% 100%');\n        bgstyle.set('width', Math.round(imgWidth) + 'px');\n        bgstyle.set('height', Math.round(imgHeight) + 'px');\n\n        return bgstyle;\n    }\n\n    private setCSSStyle(cssStyle: Map<string, any>) {\n        cssStyle.forEach((value: any, key: string) => {\n            this._renderer.setStyle(this._elemRef.nativeElement, key, value);\n        });\n    }\n}\n","import { Directive , HostListener, ElementRef} from '@angular/core';\nimport { ServoyPublicService } from '../services/servoy_public.service';\n\n@Directive({\n  selector: '[svyAutosave]'\n})\nexport class AutosaveDirective {\n\n  constructor(private servoyService: ServoyPublicService, private elementRef: ElementRef) {\n  }\n\n  @HostListener('click', ['$event.target'])\n  onClick(target): void {\n    if (target == this.elementRef.nativeElement || target.parentNode == this.elementRef.nativeElement) {\n      this.servoyService.callService('applicationServerService', 'autosave', {}, true);\n    }\n  }\n}\n","import { Directive , Input, OnInit, HostListener} from '@angular/core';\nimport { ServoyPublicService } from '../services/servoy_public.service';\n\n@Directive({\n  selector: '[svyUpload]'\n})\nexport class UploadDirective implements OnInit {\n    @Input() formname: string;\n    @Input() componentName: string;\n\n    private url: string;\n    private propertyName = 'dataProviderID';\n\n    constructor(private servoyService: ServoyPublicService) {\n    }\n\n    @HostListener('click') click(e: Event) {\n        this.servoyService.showFileOpenDialog('Please select a file', false, null, this.url);\n    }\n\n    ngOnInit(): void {\n        this.url = this.servoyService.generateUploadUrl(this.formname, this.componentName, this.propertyName);\n    }\n\n}\n","import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Renderer2 } from '@angular/core';\r\nimport { Format, FormattingService } from './formatting.service';\r\n\r\nconst MASK_CONST = {\r\n    // Predefined character definitions\r\n    definitions: {\r\n        '#': '[0-9]',\r\n        0: '[0-9]',\r\n        U: '[A-Z]',\r\n        L: '[a-z]',\r\n        A: '[A-Za-z0-9]',\r\n        '?': '[A-Za-z]',\r\n        '*': '.',\r\n        H: '[A-F0-9]'\r\n    },\r\n    converters: {\r\n        U(c) {\nreturn c.toUpperCase();\n},\r\n        L(c) {\nreturn c.toLowerCase();\n},\r\n        H(c) {\nreturn c.toUpperCase();\n}\r\n    }\r\n};\r\n\r\nexport class MaskFormat {\r\n    private ignore: boolean;\r\n    private firstNonMaskPos = -1;\r\n    private settings: Object;\r\n    private buffer: string[] = [];\r\n    private tests: RegExp[] = [];\r\n    private converters: any[] = [];\r\n    private mask: string;\r\n    private focusText: string;\r\n    private filteredMask: string;\r\n\r\n    constructor(private format: Format, private _renderer: Renderer2, private element: HTMLInputElement,\r\n                        private formatService: FormattingService, @Inject(DOCUMENT) private doc: Document) {\r\n        this.ignore = false;\r\n        this.settings = {};\r\n        this.settings['placeholder'] = this.format.placeHolder ? this.format.placeHolder : ' ';\r\n        if (this.format.allowedCharacters)\r\n        this.settings['allowedCharacters'] = this.format.allowedCharacters;\r\n\r\n        if (!this.settings['completed']) {\r\n            this.settings['completed'] = null;\r\n        }\r\n\r\n        this.mask = this.format.edit;\r\n//          if (!this.mask && this.element.value.length > 0) { //TODO check condition\r\n//              return this.buffer.map(function(c, i) { //TODO why return??\r\n//                  return this.tests[i] ? c : null;\r\n//              }, this).join('');\r\n//          }\r\n\r\n        let skipNextMask = false;\r\n        this.filteredMask = '';\r\n        const defs = MASK_CONST.definitions;\r\n        const converts = MASK_CONST.converters;\r\n        this.converters = [];\r\n        let partialPosition = this.mask.length;\r\n        let len = this.mask.length;\r\n\r\n        const chars = this.mask.split('');\r\n        for (let i = 0 ; i < chars.length; i++) {\r\n            const c = chars[i];\r\n//            if (c == '?') {\r\n//                len--;\r\n//                partialPosition = i;\r\n//            } else\r\n            if (!skipNextMask && c === '\\'') {\r\n                skipNextMask = true;\r\n                len--;\r\n                partialPosition--;\r\n            } else {\r\n                if (!skipNextMask && defs[c]) {\r\n                    if (c === '*' && this.settings['allowedCharacters']) {\r\n                        this.tests.push(new RegExp('[' + this.settings['allowedCharacters'] + ']'));\r\n                    } else {\r\n                        this.tests.push(new RegExp(defs[c]));\r\n                    }\r\n                    if (this.firstNonMaskPos === -1)\r\n                        this.firstNonMaskPos =  this.tests.length - 1;\r\n                } else {\r\n                    this.tests.push(null);\r\n                    skipNextMask = false;\r\n                }\r\n                this.converters.push(converts[c]);\r\n                this.filteredMask += c;\r\n            }\r\n        }\r\n\r\n\r\n        this.buffer = this.filteredMask.split('').map(function(c, i, array) {\r\n            return this.tests[i] ? this.getPlaceHolder(i) : c;\r\n        }, this);\r\n\r\n        this._renderer.listen(this.element, 'input', () => {\nthis.setCaret(this.checkVal(true));\n});\r\n        this._renderer.listen(this.element, 'focus', () => this.onFocus());\r\n        this._renderer.listen(this.element, 'blur', () => this.onBlur());\r\n        this._renderer.listen(this.element, 'keypress', (event) => this.onKeypress(event));\r\n        this._renderer.listen(this.element, 'keydown', (event) => this.onKeydown(event));\r\n    }\r\n\r\n    private onFocus() {\r\n        this.focusText = this.element.value;\r\n        const pos = this.checkVal(true);\r\n        this.writeBuffer();\r\n        setTimeout( () => this.setCaretOnFocus(pos), 0);\r\n    }\r\n\r\n    private setCaretOnFocus(pos) {\r\n        if (pos !== this.filteredMask.length) {\r\n            this.setCaret(pos);\r\n        } else {\r\n            this.setCaret(this.element.selectionStart);\r\n        }\r\n    }\r\n\r\n    private onBlur() {\r\n        this.checkVal(true);\r\n        if (this.element.value !== this.focusText) {\r\n            this.element.dispatchEvent(new CustomEvent('change', { bubbles: true, detail: { text: () => this.element.value } }));\r\n        }\r\n    }\r\n\r\n    private onKeypress(e) {\r\n        if (this.formatService.testKeyPressed(e, 13) && e.target.tagName.toUpperCase() === 'INPUT') {\r\n            //do not looses focus, just apply the format and push value\r\n            this.element.dispatchEvent(new CustomEvent('change', { bubbles: true, detail: { text: () => this.element.value } }));\r\n            return true;\r\n        }\r\n        if (this.ignore) {\r\n            this.ignore = false;\r\n            // Fixes Mac FF bug on backspace\r\n            return (e.keyCode === 8) ? false : null;\r\n        }\r\n        // TODO needed? e = e || window.event;\r\n        const k = e.charCode || e.keyCode || e.which;\r\n        const posBegin = this.element.selectionStart;\r\n        const posEnd = this.element.selectionEnd;\r\n\r\n        if (e.ctrlKey || e.altKey || e.metaKey) {// Ignore\r\n            return true;\r\n        } else if ((k >= 32 && k <= 125) || k > 186) {// typeable characters\r\n            const p = this.seekNext(posBegin - 1);\r\n            if (p < this.mask.length) {\r\n                let c = String.fromCharCode(k);\r\n                if (this.converters[p]) {\r\n                    c = this.converters[p](c);\r\n                }\r\n                if (this.tests[p].test(c)) {\r\n//                    shiftR(p);\r\n                    this.buffer[p] = c;\r\n                    this.writeBuffer();\r\n                    const next = this.seekNext(p);\r\n                    this.setCaret(next);\r\n                    if (this.settings['completed'] && next == this.mask.length)\r\n                        this.settings['completed'].call(this.element);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private onKeydown(e: KeyboardEvent) {\r\n        const iPhone = (window.orientation !== undefined);\r\n        let posBegin = this.element.selectionStart;\r\n        let posEnd = this.element.selectionEnd;\r\n        const k = e.keyCode;\r\n        this.ignore = (k < 16 || (k > 16 && k < 32) || (k > 32 && k < 41));\r\n        if (k === 37) {\r\n            const nextValidChar = this.seekPrevious(posBegin);\r\n            if (nextValidChar !== posBegin) {\r\n                this.setCaret(nextValidChar);\r\n                return false;\r\n            }\r\n            return;\r\n        } else if (k === 39) {\r\n            const nextValidChar = this.seekNext(posBegin);\r\n            if (nextValidChar !== posBegin) {\r\n                this.setCaret(nextValidChar);\r\n                return false;\r\n            }\r\n            return;\r\n        } else {\r\n            const nextValidChar = this.seekNext(posBegin - 1) - posBegin;\r\n            if (nextValidChar > 0) {\r\n                posBegin += nextValidChar;\r\n                posEnd += nextValidChar;\r\n            }\r\n        }\r\n\r\n        // backspace, delete, and escape get special treatment\r\n        if (k === 8 || k === 46 || (iPhone && k === 127)) {\r\n            if (posBegin === posEnd) {\r\n                this.clear(posBegin + (k === 46 ? 0 : -1), (k === 46 ? 1 : 0));\r\n            } else {\r\n                this.clearBuffer(posBegin, posEnd);\r\n                this.writeBuffer();\r\n                this.setCaret(Math.max(this.firstNonMaskPos, posBegin));\r\n            }\r\n            return false;\r\n        } else if (k === 27) {// escape\r\n            this.element.value = this.focusText;\r\n            this.setCaret(0, this.checkVal());\r\n            return false;\r\n        } else if (posBegin !== posEnd && !this.ignore) {\r\n            this.clearBuffer(posBegin, posEnd);\r\n        }\r\n    }\r\n\r\n    private setCaret(begin: number, end?: number) {\r\n        if (this.element.value.length === 0) return;\r\n        if (typeof begin === 'number') {\r\n            end = (typeof end === 'number') ? end : begin;\r\n                if (this.element != null) {\r\n                      if (this.element['createTextRange']) {\r\n                          const range = this.element['createTextRange']();\r\n                          range.move('character', begin);\r\n                          range.select();\r\n                      } else if (this.element.selectionStart >= 0) {\r\n                        this.element.setSelectionRange(begin, end);\r\n                      }\r\n                }\r\n        } else {\r\n            if (this.element['setSelectionRange']) {\r\n                begin = this.element.selectionStart;\r\n                end = this.element.selectionEnd;\r\n            } else if (this.doc.getSelection() && this.doc.getSelection()['createRange']) {\r\n                const range = this.doc.getSelection()['createRange']();\r\n                begin = 0 - range.duplicate().moveStart('character', -100000);\r\n                end = begin + range.text.length;\r\n            }\r\n            return { begin, end };\r\n        }\r\n    }\r\n\r\n    private seekPrevious(pos: number): number {\r\n        while (--pos >= 0 && !this.tests[pos]);\r\n        return pos;\r\n    }\r\n\r\n    private seekNext(pos: number): number {\r\n        while (++pos <= this.mask.length && !this.tests[pos]);\r\n        return pos;\r\n    }\r\n\r\n    private clear(pos, caretAddition) {\r\n        while (!this.tests[pos] && --pos >= 0);\r\n        if (this.tests[pos]) {\r\n            this.buffer[pos] = this.getPlaceHolder(pos);\r\n        }\r\n        this.writeBuffer();\r\n        if (caretAddition !== 0) {\r\n            let nextPos = pos + caretAddition;\r\n            while ( nextPos >= 0 && nextPos < this.mask.length ) {\r\n                if (this.tests[nextPos]) {\r\n                    pos = nextPos;\r\n                    break;\r\n                }\r\n                nextPos = nextPos + caretAddition;\r\n            }\r\n        }\r\n        this.setCaret(Math.max(this.firstNonMaskPos, pos));\r\n    }\r\n\r\n    private clearBuffer(start: number, end: number) {\r\n        for (let i = start; i < end && i < this.mask.length; i++) {\r\n            if (this.tests[i])\r\n                this.buffer[i] = this.getPlaceHolder(i);\r\n        }\r\n    }\r\n\r\n    private writeBuffer(): string {\r\n        this.element.value = this.buffer.join('');\r\n        return this.element.value;\r\n    }\r\n\r\n    private checkVal(allow = false): number {\r\n        // try to place characters where they belong\r\n        const partialPosition = this.mask.length;\r\n        const test = this.element.value;\r\n        let lastMatch = -1;\r\n        let firstError = -1;\r\n        for (let i = 0, pos = 0; i < this.mask.length; i++) {\r\n            if (this.tests[i]) {\r\n                this.buffer[i] = this.getPlaceHolder(i);\r\n                while (pos++ < test.length) {\r\n                    const c = test.charAt(pos - 1);\r\n                    // if the char is the place holder then dont shift..\r\n                    if (c === this.buffer[i]) {\r\n                       if (firstError === -1) firstError = i;\r\n                       break;\r\n                    }\r\n                    if (this.tests[i].test(c)) {\r\n                        this.buffer[i] = c;\r\n                        lastMatch = i;\r\n                        break;\r\n                    }\r\n                }\r\n                if (pos > test.length)\r\n                    break;\r\n            } else if (this.buffer[i] === test.charAt(pos) && i !== partialPosition) {\r\n                pos++;\r\n//                    lastMatch = i;\r\n            }\r\n        }\r\n        if (!allow && lastMatch + 1 < partialPosition) {\r\n            this.element.value = '';\r\n            this.clearBuffer(0, this.mask.length);\r\n        } else if (allow && lastMatch === -1) {\r\n            this.element.value = '';\r\n            this.clearBuffer(0, this.mask.length);\r\n        } else if (allow || lastMatch + 1 >= partialPosition) {\r\n            this.writeBuffer();\r\n            if (!allow) this.element.value = this.element.value.substring(0, lastMatch + 1);\r\n        }\r\n        return firstError !== -1 ? firstError : (partialPosition ? lastMatch : this.firstNonMaskPos);\r\n    }\r\n\r\n    private getPlaceHolder(i: number): any {\r\n        return this.settings['placeholder'].length > 1 ? this.settings['placeholder'].charAt(i) : this.settings['placeholder'];\r\n    }\r\n}\r\n\r\n","\r\nimport { Directive, Renderer2, ElementRef, Input, HostListener, forwardRef, AfterViewInit, OnChanges, Inject } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { MaskFormat } from './maskformat';\r\nimport { Format, FormattingService } from './formatting.service';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { LoggerFactory, LoggerService } from '../logger.service';\r\n\r\n\r\nclass NumberParser {\r\n  private _group: RegExp;\r\n    private _decimal: RegExp;\r\n    private _numeral: RegExp;\r\n    private _index: (d: any) => string;\r\n  constructor() {\r\n    const locale = new Intl.NumberFormat().resolvedOptions().locale;\r\n    const parts = (new Intl.NumberFormat(locale) as any).formatToParts(12345.6);\r\n    const numerals = [...new Intl.NumberFormat(locale, {useGrouping: false}).format(9876543210)].reverse();\r\n    const index = new Map(numerals.map((d, i) => [d, i]));\r\n    this._group = new RegExp(`[${parts.find(d => d.type === 'group').value}]`, 'g');\r\n    this._decimal = new RegExp(`[${parts.find(d => d.type === 'decimal').value}]`);\r\n    this._numeral = new RegExp(`[${numerals.join('')}]`, 'g');\r\n    this._index = d => index.get(d).toString();\r\n  }\r\n  parse(str: string) {\r\n    return (str.trim().replace(this._group, '').replace(this._decimal, '.').replace(this._numeral, this._index)) ? +str : NaN;\r\n  }\r\n}\r\n\r\n@Directive({\r\n\r\n    // eslint-disable-next-line @angular-eslint/directive-selector\r\n    selector: '[svyFormat]',\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: forwardRef(() => FormatDirective),\r\n        multi: true\r\n    }]\r\n})\r\nexport class FormatDirective implements ControlValueAccessor, AfterViewInit, OnChanges {\r\n    private static DATETIMEFORMAT: Format = {display:'yyyy-MM-ddTHH:mm:ss', type:'DATETIME'} as Format;\r\n    private static DATEFORMAT: Format = {display:'yyyy-MM-dd', type:'DATETIME'} as Format;\r\n    private static MONTHFORMAT: Format = {display:'yyyy-MM', type:'DATETIME'} as Format;\r\n    private static WEEKFORMAT: Format = {display:'YYYY-[W]WW', type:'DATETIME'} as Format;\r\n    private static TIMEFORMAT: Format = {display:'HH:mm', type:'DATETIME'} as Format;\r\n    private static BROWSERNUMBERFORMAT = new NumberParser();\r\n\r\n    @Input('svyFormat') format: Format;\r\n    @Input() findmode: boolean;\r\n\r\n    private hasFocus = false;\r\n    private realValue = null;\r\n\r\n    private isKeyPressEventFired = false;\r\n    private oldInputValue = null;\r\n    private listeners = [];\r\n    private readonly log: LoggerService;\r\n\r\n    constructor(private _renderer: Renderer2, private _elementRef: ElementRef, private formatService: FormattingService,\r\n        @Inject(DOCUMENT) private doc: Document, logFactory: LoggerFactory) {\r\n        this.log = logFactory.getLogger('formatdirective');\r\n    }\r\n\r\n    @HostListener('blur', []) touched() {\r\n        this.onTouchedCallback();\r\n        this.hasFocus = false;\r\n        if (this.format.display && this.format.edit && this.format.edit !== this.format.display) {\r\n            this.writeValue(this.realValue);\r\n        }\r\n    }\r\n\r\n    @HostListener('focus', []) focussed() {\r\n        this.hasFocus = true;\r\n        if (this.format.display && this.format.edit && this.format.edit !== this.format.display) {\r\n            this.writeValue(this.realValue);\r\n        }\r\n    }\r\n\r\n    @HostListener('change', ['$event.target.value']) input(value: any) {\r\n        let data = value;\r\n        const inputType = this.getType();\r\n        if (inputType === 'datetime-local') {\r\n             data = this.formatService.unformat(value, FormatDirective.DATETIMEFORMAT.display, FormatDirective.DATETIMEFORMAT.type, this.realValue);\r\n        } else if (inputType === 'date') {\r\n             data = this.formatService.unformat(value, FormatDirective.DATEFORMAT.display, FormatDirective.DATEFORMAT.type, this.realValue);\r\n        } else if (inputType === 'time') {\r\n             data = this.formatService.unformat(value, FormatDirective.TIMEFORMAT.display, FormatDirective.TIMEFORMAT.type, this.realValue);\r\n        } else if (inputType === 'month') {\r\n             data = this.formatService.unformat(value, FormatDirective.MONTHFORMAT.display, FormatDirective.MONTHFORMAT.type, this.realValue);\r\n        } else if (inputType === 'week') {\r\n             data = this.formatService.unformat(value, FormatDirective.WEEKFORMAT.display, FormatDirective.WEEKFORMAT.type, this.realValue);\r\n        } else if (inputType === 'number') {\r\n             data = FormatDirective.BROWSERNUMBERFORMAT.parse(value);\r\n        } else if (inputType === 'email') {\r\n             data = value;\r\n        } else if (!this.findmode && this.format) {\r\n            const type = this.format.type;\r\n            let format = this.format.display ? this.format.display : this.format.edit;\r\n            if (this.hasFocus && this.format.edit && !this.format.isMask) format = this.format.edit;\r\n            try {\r\n                data = this.formatService.unformat(data, format, type, this.realValue);\r\n            } catch (e) {\r\n                this.log.error(e);\r\n                //TODO set error state\r\n            }\r\n            if (this.format.type === 'TEXT' && this.format.isRaw && this.format.isMask) {\r\n                if (data && format && data.length === format.length) {\r\n                    let ret = '';\r\n                    for (let i = 0; i < format.length; i++) {\r\n                        switch (format[i]) {\r\n                            case 'U':\r\n                            case 'L':\r\n                            case 'A':\r\n                            case '?':\r\n                            case '*':\r\n                            case 'H':\r\n                            case '#':\r\n                                ret += data[i];\r\n                                break;\r\n                            default:\r\n                                // ignore literal characters\r\n                                break;\r\n                        }\r\n                    }\r\n                    data = ret;\r\n                }\r\n            }\r\n        }\r\n        this.realValue = data;\r\n        this.onChangeCallback(data);\r\n    }\r\n\r\n    onChangeCallback = (_: any) => { };\r\n    onTouchedCallback = () => { };\r\n\r\n    ngAfterViewInit(): void {\r\n        this.setFormat();\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.setFormat();\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.realValue = value;\r\n        const inputType = this.getType();\r\n        if (inputType === 'datetime-local') {\r\n             const data = this.formatService.format(value, FormatDirective.DATETIMEFORMAT, false);\r\n             this._renderer.setProperty(this._elementRef.nativeElement, 'value', data);\r\n        } else if (inputType === 'date') {\r\n            const data = this.formatService.format(value, FormatDirective.DATEFORMAT, false);\r\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', data);\r\n        } else if (inputType === 'time') {\r\n            const data = this.formatService.format(value, FormatDirective.TIMEFORMAT, false);\r\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', data);\r\n        } else if (inputType === 'month') {\r\n            const data = this.formatService.format(value, FormatDirective.MONTHFORMAT, false);\r\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', data);\r\n        } else if (inputType === 'week') {\r\n            const data = this.formatService.format(value, FormatDirective.WEEKFORMAT, false);\r\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', data);\r\n        } else if (inputType === 'number') {\r\n            const data = value?new Intl.NumberFormat().format(value):'';\r\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', data);\r\n        } else if (inputType === 'email') {\r\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', value);\r\n        } else if (value && this.format) {\r\n            let data = value;\r\n            if (!this.findmode) {\r\n                data = inputType  === 'number' && data.toString().length >= this.format.maxLength ? data.toString().substring(0, this.format.maxLength) : data;\r\n                let useEdit = !this.format.display;\r\n                if (this.format.edit && !this.format.isMask && this.hasFocus) useEdit = true;\r\n                try {\r\n                    data = this.formatService.format(data, this.format, useEdit);\r\n                } catch (e) {\r\n                    this.log.error(e);\r\n                }\r\n                if (data && this.format.type === 'TEXT') {\r\n                    if (this.format.uppercase) data = data.toUpperCase();\r\n                    else if (this.format.lowercase) data = data.toLowerCase();\r\n                }\r\n            }\r\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', data);\r\n        } else {\r\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', value ? value : '');\r\n        }\r\n    }\r\n\r\n    private getType(): string {\r\n        const type = this._elementRef.nativeElement.type as string;\r\n        return type?type.toLocaleLowerCase():'text';\r\n    }\r\n\r\n    private setFormat() {\r\n        this.listeners.forEach(lFn => lFn());\r\n        this.listeners = [];\r\n        if (this.format) {\r\n            if (!this.findmode && (this.format.uppercase || this.format.lowercase)) {\r\n                this.listeners.push(this._renderer.listen(this._elementRef.nativeElement, 'input', () => this.upperOrLowerCase()));\r\n            }\r\n            if (this.format.isNumberValidator || this.format.type === 'NUMBER' || this.format.type === 'INTEGER') {\r\n                this.listeners.push(this._renderer.listen(this._elementRef.nativeElement, 'keypress', (event) => {\r\n                    this.isKeyPressEventFired = true;\r\n                    return this.formatService.testForNumbersOnly(event, null, this._elementRef.nativeElement, this.findmode, true, this.format, false);\r\n                }));\r\n                this.listeners.push(this._renderer.listen(this._elementRef.nativeElement, 'input', (event) => this.inputFiredForNumbersCheck(event)));\r\n            }\r\n            if (this.format.maxLength) {\r\n                if (!this.findmode) {\r\n                    this._renderer.setAttribute(this._elementRef.nativeElement, 'maxlength', this.format.maxLength + '');\r\n                } else {\r\n                    this._renderer.removeAttribute(this._elementRef.nativeElement, 'maxlength');\r\n                }\r\n            }\r\n            if (!this.findmode && this.format.isMask) {\r\n                new MaskFormat(this.format, this._renderer, this._elementRef.nativeElement, this.formatService, this.doc);\r\n            }\r\n            this.writeValue(this.realValue);\r\n        }\r\n    }\r\n\r\n    // lower and upper case handling\r\n\r\n    private upperOrLowerCase() {\r\n        const element = this._elementRef.nativeElement;\r\n        const caretPos = element.selectionStart;\r\n        element.value = this.format.uppercase ? element.value.toUpperCase() : element.value.toLowerCase();\r\n        element.setSelectionRange(caretPos, caretPos);\r\n    }\r\n\r\n    private inputFiredForNumbersCheck(event: Event) {\r\n        let currentValue = this._elementRef.nativeElement.value;\r\n\r\n        if (!this.isKeyPressEventFired && (event.target as HTMLElement).tagName.toUpperCase() === 'INPUT') {\r\n            // get inserted chars\r\n            const inserted = this.findDelta(currentValue, this.oldInputValue);\r\n            // get removed chars\r\n            const removed = this.findDelta(this.oldInputValue, currentValue);\r\n            // determine if user pasted content\r\n            const pasted = inserted.length > 1 || (!inserted && !removed);\r\n\r\n            if (!pasted && !removed) {\r\n                if (!this.formatService.testForNumbersOnly(event, inserted, this._elementRef.nativeElement, this.findmode, true, this.format, true)) {\r\n                    currentValue = this.oldInputValue;\r\n                }\r\n            }\r\n\r\n            //If number validator, check all chars in string and extract only the valid chars.\r\n            if ((event.target as HTMLInputElement).type.toUpperCase() === 'NUMBER' || this.format.type === 'NUMBER' || this.format.type === 'INTEGER' || this.format.isNumberValidator) {\r\n                currentValue = this.getNumbersFromString(event, currentValue, this.oldInputValue);\r\n            }\r\n\r\n            if (currentValue !== this._elementRef.nativeElement.value) {\r\n                this._elementRef.nativeElement.value = currentValue;\r\n\r\n                // // detect IE8 and above, and Edge; call on change manually because of https://bugs.jquery.com/ticket/10818\r\n                // if (/MSIE/.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge/.test(navigator.userAgent)) {\r\n                // \tvar changeOnBlurForIE = function() {\r\n                // \t\t element.change();\r\n                // \t\t element.off(\"blur\", callChangeOnBlur);\r\n                // \t }\r\n                // \t element.on(\"blur\", changeOnBlurForIE);\r\n                // }\r\n            }\r\n\r\n            this.oldInputValue = currentValue;\r\n            this.isKeyPressEventFired = false;\r\n        }\r\n\r\n        if (this.isKeyPressEventFired) {\r\n            this.oldInputValue = currentValue;\r\n            this.isKeyPressEventFired = false;\r\n        }\r\n    }\r\n\r\n    private findDelta(value: string, prevValue: string): string {\r\n        let delta = '';\r\n        if (typeof value === 'string' && typeof prevValue === 'string' && value.length >= prevValue.length) {\r\n            for (let i = 0; i < value.length; i++) {\r\n                const str = value.substr(0, i) + value.substr(i + value.length - prevValue.length);\r\n                if (str === prevValue) {\r\n                    delta = value.substr(i, value.length - prevValue.length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return delta;\r\n    }\r\n\r\n    private getNumbersFromString(e: Event, currentValue: string, oldInputValue: string) {\r\n        if (oldInputValue === currentValue) {\r\n            return currentValue;\r\n        }\r\n        let stripped = '';\r\n        for (let i = 0; i < currentValue.length; i++) {\r\n            if (this.formatService.testForNumbersOnly(e, currentValue.charAt(i), this._elementRef.nativeElement, this.findmode, true, this.format, true)) {\r\n                stripped = stripped + currentValue.charAt(i);\r\n                if (stripped.length === this.format.maxLength) break;\r\n            }\r\n        }\r\n        return stripped;\r\n    }\r\n}\r\n\r\n\r\n","import { Directive, Input, OnInit, HostBinding, ElementRef, HostListener, OnDestroy, ChangeDetectorRef, SimpleChanges, OnChanges } from '@angular/core';\n\n@Directive({\n    selector: '[sabloTabseq]'\n})\nexport class SabloTabseq implements OnInit, OnChanges, OnDestroy {\n\n    @Input('sabloTabseq') designTabSeq: number;\n    @Input('sabloTabseqConfig') config: any;\n    @HostBinding('attr.tabindex') tabindex: number;\n\n    designChildIndexToArrayPosition = {};\n    designChildTabSeq = []; // contains ordered numbers that will be keys in 'runtimeChildIndexes'; can have duplicates\n    runtimeChildIndexes = {}; // map designChildIndex[i] -> runtimeIndex for child or designChildIndex[i] -> [runtimeIndex1, runtimeIndex2] in case there are multiple equal design time indexes\n    runtimeIndex;\n    initializing: boolean;\n    isEnabled: boolean;\n\n    constructor(private _elemRef: ElementRef, private cdRef: ChangeDetectorRef) {\n    }\n\n    // handle event: Child Servoy Tab Sequence registered\n    @HostListener('registerCSTS', ['$event.detail[0]', '$event.detail[1]', '$event'])\n    registerChildHandler(designChildIndex, runtimeChildIndex, event): boolean {\n        if (this.designTabSeq === -2 || designChildIndex === -2) {\n            this.recalculateIndexesHandler(designChildIndex ? designChildIndex : 0, false);\n            event.stopPropagation();\n            return false;\n        }\n\n        // insert it sorted\n        let posInDesignArray = 0;\n        for (let tz = 0; tz < this.designChildTabSeq.length && this.designChildTabSeq[tz] < designChildIndex; tz++) {\n            posInDesignArray = tz + 1;\n        }\n        if (posInDesignArray === this.designChildTabSeq.length || this.designChildTabSeq[posInDesignArray] > designChildIndex) {\n            this.designChildTabSeq.splice(posInDesignArray, 0, designChildIndex);\n\n            // always keep in designChildIndexToArrayPosition[i] the first occurrance of design index i in the sorted designChildTabSeq array\n            for (let tz = posInDesignArray; tz < this.designChildTabSeq.length; tz++) {\n                this.designChildIndexToArrayPosition[this.designChildTabSeq[tz]] = tz;\n            }\n            this.runtimeChildIndexes[designChildIndex] = runtimeChildIndex;\n        } else {\n            // its == that means that we have dupliate design indexes; we treat this special - all same design index children as a list in one runtime index array cell\n            if (!this.runtimeChildIndexes[designChildIndex].push) {\n                this.runtimeChildIndexes[designChildIndex] = [this.runtimeChildIndexes[designChildIndex]];\n            }\n            this.runtimeChildIndexes[designChildIndex].push(runtimeChildIndex);\n        }\n\n        this.recalculateIndexesHandler(designChildIndex ? designChildIndex : 0, false);\n        event.stopPropagation();\n        return false;\n    }\n\n    @HostListener('unregisterCSTS', ['$event.detail[0]', '$event.detail[1]', '$event'])\n    unregisterChildHandler(designChildIndex, runtimeChildIndex, event): boolean {\n        if (this.designTabSeq === -2 || designChildIndex === -2) {\n            event.stopPropagation();\n            return false;\n        }\n\n        const posInDesignArray = this.designChildIndexToArrayPosition[designChildIndex];\n        if (posInDesignArray !== undefined) {\n            const keyInRuntimeArray = this.designChildTabSeq[posInDesignArray];\n            const multipleEqualDesignValues = this.runtimeChildIndexes[keyInRuntimeArray].push;\n            if (!multipleEqualDesignValues) {\n                delete this.designChildIndexToArrayPosition[designChildIndex];\n                for (const tmp in this.designChildIndexToArrayPosition) {\n                    if (this.designChildIndexToArrayPosition[tmp] > posInDesignArray) this.designChildIndexToArrayPosition[tmp]--;\n                }\n                this.designChildTabSeq.splice(posInDesignArray, 1);\n                delete this.runtimeChildIndexes[keyInRuntimeArray];\n            } else {\n                this.runtimeChildIndexes[keyInRuntimeArray].splice(this.runtimeChildIndexes[keyInRuntimeArray].indexOf(runtimeChildIndex), 1);\n                if (this.runtimeChildIndexes[keyInRuntimeArray].length === 1) this.runtimeChildIndexes[keyInRuntimeArray] = this.runtimeChildIndexes[keyInRuntimeArray][0];\n            }\n        }\n        event.stopPropagation();\n        return false;\n    }\n\n    // handle event: child tree was now linked or some child needs extra indexes; runtime indexes can be computed starting at the given child;\n    // recalculate Parent Servoy Tab Sequence\n    @HostListener('recalculatePSTS', ['$event.detail[0]', '$event.detail[1]', '$event'])\n    recalculateIndexesHandler(designChildIndex, initialRootRecalculate, event?): boolean {\n        if (this.designTabSeq === -2 || designChildIndex === -2) {\n            if(event) event.stopPropagation();\n            return false;\n        }\n\n        if (!this.initializing) {\n            // a new child is ready/linked; recalculate tab indexes for it and after it\n            const startIdx = (this.designChildIndexToArrayPosition && this.designChildIndexToArrayPosition[designChildIndex] !== undefined) ?\n                this.designChildIndexToArrayPosition[designChildIndex] : 0;\n            this.recalculateChildRuntimeIndexesStartingAt(startIdx, false);\n        } else if (initialRootRecalculate) {\n            // this is $rootScope (one $parent extra cause the directive creates it); we always assume a sabloTabseq directive is bound to it;\n            // now that it is linked we can do initial calculation of tre\n            this.runtimeIndex.startIndex = this.runtimeIndex.nextAvailableIndex = 1;\n            this.recalculateChildRuntimeIndexesStartingAt(0, true);\n        } // else wait for parent tabSeq directives to get linked as well\n\n        if(event) event.stopPropagation();\n        return false;\n    }\n\n    @HostListener('disableTabseq', ['$event'])\n    disableTabseq(event: CustomEvent<boolean>): boolean {\n        this.isEnabled = false;\n        this.recalculateChildRuntimeIndexesStartingAt(0, true);\n        event.stopPropagation();\n        return false;\n    }\n\n    @HostListener('enableTabseq', ['$event'])\n    enableTabseq(event: CustomEvent<boolean>): boolean {\n        this.isEnabled = true;\n        this.trigger(this._elemRef.nativeElement.parentNode, 'recalculatePSTS', [0, false]);\n        event.stopPropagation();\n        return false;\n    }\n\n    ngOnInit(): void {\n        // called by angular in parents first then in children\n        if (!this.designTabSeq) this.designTabSeq = 0;\n\n        this.initializing = true;\n        this.isEnabled = true;\n\n        // runtime index -1 == SKIP focus traversal in browser\n        // runtime index  0 == DEFAULT == design tab seq 0 (not tabIndex attr set to element or it's children)\n        this.runtimeIndex = { startIndex: -1, nextAvailableIndex: -1, sablotabseq: this };\n        // -1 runtime initially for all (in case some node in the tree has -2 design (skip) and children have >= 0,\n        // at runtime all children should be excluded as wel)\n        this.updateCurrentDomElTabIndex();\n\n        // check to see if this is the top-most tabSeq container\n        if (this.config && this.config.root) {\n            // it's root tab seq container (so no parent); just do initial tree calculation\n            this.recalculateIndexesHandler(0, true);\n        } else {\n            if (this.designTabSeq !== -2) {\n                this.trigger(this._elemRef.nativeElement.parentNode, 'registerCSTS', [this.designTabSeq, this.runtimeIndex]);\n            }\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        const change = changes['designTabSeq'];\n        if (change && !change.firstChange) {\n            if (!(this.config && this.config.root)) {\n                if (change.previousValue !== -2) this.trigger(this._elemRef.nativeElement.parentNode, 'unregisterCSTS', [change.previousValue, this.runtimeIndex]);\n                if (!this.designTabSeq) this.designTabSeq = 0;\n                this.runtimeIndex.startIndex = -1;\n                this.runtimeIndex.nextAvailableIndex = -1;\n                this.initializing = true;\n\n                if (this.designTabSeq !== -2) {\n                    this.trigger(this._elemRef.nativeElement.parentNode, 'registerCSTS', [this.designTabSeq, this.runtimeIndex]);\n                    // here we could send [0] instead of [designTabSeq] - it would potentially calculate more but start again from first parent available index,\n                    // not higher index (the end user behavior being the same)\n                    this.trigger(this._elemRef.nativeElement.parentNode, 'recalculatePSTS', [this.designTabSeq]);\n                } else {\n                    this.updateCurrentDomElTabIndex(); // -1 runtime\n                }\n            }\n        }\n    }\n\n    recalculateChildRuntimeIndexesStartingAt(posInDesignArray /*inclusive*/, triggeredByParent): void {\n        if (this.designTabSeq === -2) return;\n\n        if (!this.isEnabled || this.runtimeIndex.startIndex === -1) {\n\n            this.runtimeIndex.nextAvailableIndex = this.runtimeIndex.startIndex;\n            this.runtimeIndex.startIndex = -1;\n        } else if (this.designTabSeq === 0) {\n            // this element doesn't set any tabIndex attribute (default behavior)\n            this.runtimeIndex.nextAvailableIndex = this.runtimeIndex.startIndex;\n            this.runtimeIndex.startIndex = 0;\n        } else if (this.runtimeIndex.startIndex === 0) {\n            this.runtimeIndex.nextAvailableIndex = 0;\n        } else if (this.runtimeIndex.nextAvailableIndex === -1) {\n            const reservedGap = (this.config && this.config.reservedGap) ? this.config.reservedGap : 0;\n            this.runtimeIndex.nextAvailableIndex = this.runtimeIndex.startIndex + reservedGap;\n        }\n\n        if (posInDesignArray === 0) this.updateCurrentDomElTabIndex();\n\n        let recalculateStartIndex = this.runtimeIndex.startIndex;\n        if (posInDesignArray > 0 && posInDesignArray - 1 < this.designChildTabSeq.length) {\n            const runtimeCI = this.runtimeChildIndexes[this.designChildTabSeq[posInDesignArray - 1]]; // this can be an array in case of multiple equal design indexes being siblings\n            recalculateStartIndex = runtimeCI.push ? runtimeCI[runtimeCI.length - 1].nextAvailableIndex : runtimeCI.nextAvailableIndex;\n        }\n\n        for (let i = posInDesignArray; i < this.designChildTabSeq.length; i++) {\n            const childRuntimeIndex = this.runtimeChildIndexes[this.designChildTabSeq[i]];\n            if (childRuntimeIndex.push) {\n                // multiple equal design time indexes as siblings\n                let max = recalculateStartIndex;\n                for (const k in childRuntimeIndex) {\n                    if(childRuntimeIndex.hasOwnProperty(k)) {\n                        childRuntimeIndex[k].startIndex = recalculateStartIndex;\n                        // call recalculate on whole child; normally it only makes sense for same index siblings\n                        // if they are not themselfes containers, just apply the given value\n                        childRuntimeIndex[k].sablotabseq.recalculateChildRuntimeIndexesStartingAt(0, true);\n                        if (max < childRuntimeIndex[k].nextAvailableIndex)\n                            max = childRuntimeIndex[k].nextAvailableIndex;\n                    }\n                }\n                recalculateStartIndex = max;\n            } else {\n                childRuntimeIndex.startIndex = recalculateStartIndex;\n                childRuntimeIndex.sablotabseq.recalculateChildRuntimeIndexesStartingAt(0, true); // call recalculate on whole child\n                recalculateStartIndex = childRuntimeIndex.nextAvailableIndex;\n            }\n        }\n\n        if (this.initializing) this.initializing = undefined; // it's now considered initialized as first runtime index caluculation is done\n\n        let parentRecalculateNeeded;\n        if (this.runtimeIndex.startIndex !== 0 && this.runtimeIndex.startIndex !== -1) {\n            const ownTabIndexBump = this.hasOwnTabIndex() ? 1 : 0;\n            parentRecalculateNeeded = (this.runtimeIndex.nextAvailableIndex < recalculateStartIndex + ownTabIndexBump);\n            const reservedGap = (this.config && this.config.reservedGap) ? this.config.reservedGap : 0;\n            if (parentRecalculateNeeded) this.runtimeIndex.nextAvailableIndex = recalculateStartIndex + reservedGap + ownTabIndexBump;\n        } else {\n            // start index 0 means default (no tabIndex attr. set)\n            parentRecalculateNeeded = false;\n        }\n\n        // if this container now needs more tab indexes than it was reserved; a recalculate on parent needs to be triggered in this case\n        if (parentRecalculateNeeded && !triggeredByParent) this.trigger(this._elemRef.nativeElement.parentNode, 'recalculatePSTS', [this.designTabSeq, false]);\n    }\n\n    hasOwnTabIndex(): boolean {\n        return (!this.config || !(this.config.container || this.config.root));\n    }\n\n    updateCurrentDomElTabIndex(): void {\n        if (this.hasOwnTabIndex()) {\n            if (this.runtimeIndex.startIndex !== 0) {\n                this.setDOMTabIndex(this.runtimeIndex.startIndex);\n            } else {\n                this.setDOMTabIndex(undefined);\n            }\n        }\n    }\n\n    setDOMTabIndex(tabindex): void {\n        this.tabindex = tabindex;\n        this.cdRef.detectChanges();\n    }\n\n    trigger(target, event: string, arg): void {\n        const customEvent = new CustomEvent(event, {\n            bubbles: true,\n            detail: arg\n          });\n        target.dispatchEvent(customEvent);\n    }\n\n    ngOnDestroy(): void {\n        // unregister current tabSeq from parent tabSeq container\n        if(this._elemRef.nativeElement.parentNode) {\n            this.trigger(this._elemRef.nativeElement.parentNode, 'unregisterCSTS', [this.designTabSeq, this.runtimeIndex]);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { IterableDiffers, IterableDiffer } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LoggerFactory, LoggerService } from './logger.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpecTypesService {\r\n\r\n    private registeredTypes = new Map<string, typeof BaseCustomObject>();\r\n    private log: LoggerService;\r\n\r\n    constructor(logFactory: LoggerFactory) {\r\n        this.log = logFactory.getLogger('SpecTypesService');\r\n    }\r\n    createType(name: string): BaseCustomObject {\r\n        const classRef = this.registeredTypes.get(name);\r\n        if (classRef) {\r\n            return new classRef();\r\n        }\r\n        this.log.warn('returning just the basic custom object for  ' + name + ' none of the properties will be monitored');\r\n        return new BaseCustomObject();\r\n    }\r\n\r\n    enhanceArrayType<T>(array: Array<T>, iterableDiffers: IterableDiffers): ICustomArray<T> {\r\n        if (!instanceOfChangeAwareValue(array)) {\r\n            array['stateHolder'] = new ArrayState(array, iterableDiffers);\r\n            Object.defineProperty(array, 'getStateHolder', {\r\n                enumerable: false,\r\n                value() {\n                    return this.stateHolder;\n                }\r\n            });\r\n            Object.defineProperty(array, 'markForChanged', {\r\n                enumerable: false,\r\n                value() {\n                    this.stateHolder.notifyChangeListener();\n                }\r\n            });\r\n            array['stateHolder'].initDiffer();\r\n        }\r\n        return array as ICustomArray<T>;\r\n    }\r\n\r\n    registerType(name: string, classRef: typeof BaseCustomObject) {\r\n        this.registeredTypes.set(name, classRef);\r\n    }\r\n\r\n    guessType(val: any): string {\r\n        let guess = null;\r\n\r\n        if (instanceOfCustomArray(val)) {\r\n            guess = 'JSON_arr';\r\n        } else if (instanceOfBaseCustomObject(val)) {\r\n            guess = 'JSON_obj';\r\n        } // else TODO do any other types need guessing?\r\n        //        else { // try to find it in types?\r\n        //            this.registeredTypes.forEach(function(typeConstructorValue, typeNameKey) {\r\n        //                if (val instanceof typeConstructorValue) guess = typeNameKey; // this wouldn't return the converter name like 'JSON_obj' but rather the actual name from spec\r\n        //                of the custom type like \"(...).tab\"\r\n        //            });\r\n        //        }\r\n        return guess;\r\n    }\r\n}\r\n\r\nexport function isChanged(now, prev, conversionInfo) {\r\n    if ((typeof conversionInfo === 'string' || typeof conversionInfo === 'number') && instanceOfChangeAwareValue(now)) {\r\n        return now.getStateHolder().hasChanges();\r\n    }\r\n\r\n    if (now === prev) return false;\r\n    if (now && prev) {\r\n        if (now instanceof Array) {\r\n            if (prev instanceof Array) {\r\n                if (now.length !== prev.length) return true;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n        if (now instanceof Date) {\r\n            if (prev instanceof Date) {\r\n                return now.getTime() !== prev.getTime();\r\n            }\r\n            return true;\r\n        }\r\n\r\n        if ((now instanceof Object) && (prev instanceof Object)) {\r\n            // first build up a list of all the properties both have.\r\n            const fulllist = this.getCombinedPropertyNames(now, prev);\r\n            for (const prop in fulllist) {\r\n                // ng repeat creates a child scope for each element in the array any scope has a $$hashKey property which must be ignored since it is not part of the model\r\n                if (prev[prop] !== now[prop]) {\r\n                    if (prop === '$$hashKey') continue;\r\n                    if (typeof now[prop] === 'object') {\r\n                        if (isChanged(now[prop], prev[prop], conversionInfo ? conversionInfo[prop] : undefined)) {\r\n                            return true;\r\n                        }\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const instanceOfChangeAwareValue = (obj: any): obj is IChangeAwareValue =>\r\n    obj != null && (obj).getStateHolder instanceof Function;\r\n\r\n\r\nexport const instanceOfCustomArray = <T>(obj: any): obj is ICustomArray<T> =>\r\n    instanceOfChangeAwareValue(obj) && (obj as ICustomArray<T>).markForChanged instanceof Function;\r\n\r\n\r\nexport const instanceOfBaseCustomObject = (obj: any): obj is BaseCustomObject =>\r\n    instanceOfChangeAwareValue(obj) && (obj).getStateHolder() instanceof BaseCustomObjectState;\r\n\r\n\r\nexport interface IChangeAwareValue {\r\n    getStateHolder(): ChangeAwareState;\r\n}\r\n\r\nexport interface ICustomObject extends IChangeAwareValue {\r\n    getStateHolder(): BaseCustomObjectState;\r\n}\r\n\r\nexport interface ICustomArray<T> extends Array<T>, IChangeAwareValue {\r\n    getStateHolder(): ArrayState;\r\n    markForChanged(): void;\r\n}\r\n\r\nexport interface IValuelist extends Array<{ displayValue: string; realValue: any }> {\r\n    filterList(filterString: string): Observable<any>;\r\n    getDisplayValue(realValue: any): Observable<any>;\r\n    hasRealValues(): boolean;\r\n    isRealValueDate(): boolean;\r\n}\r\n\r\nexport interface IFoundsetFieldsOnly {\r\n\r\n    /**\r\n     * An identifier that allows you to use this foundset via the 'foundsetRef' type;\r\n     * when a 'foundsetRef' type sends a foundset from server to client (for example\r\n     * as a return value of callServerSideApi) it will translate to this identifier\r\n     * on client (so you can use it to find the actual foundset property in the model if\r\n     * server side script put it in the model as well); internally when sending a\r\n     * 'foundset' typed property to server through a 'foundsetRef' typed argument or prop,\r\n     * it will use this foundsetId as well to find it on server and give a real Foundset\r\n     */\r\n    foundsetId: number;\r\n\r\n    /**\r\n     * the size of the foundset on server (so not necessarily the total record count\r\n     * in case of large DB tables)\r\n     */\r\n    serverSize: number;\r\n\r\n    /**\r\n     * this is the data you need to have loaded on client (just request what you need via provided\r\n     * loadRecordsAsync or loadExtraRecordsAsync)\r\n     */\r\n    viewPort: ViewPort;\r\n\r\n    /**\r\n     * array of selected records in foundset; indexes can be out of current\r\n     * viewPort as well\r\n     */\r\n    selectedRowIndexes: number[];\r\n\r\n    /**\r\n     * sort string of the foundset, the same as the one used in scripting for\r\n     * foundset.sort and foundset.getCurrentSort. Example: 'orderid asc'.\r\n     */\r\n    sortColumns: string;\r\n\r\n    /**\r\n     * the multiselect mode of the server's foundset; if this is false,\r\n     * selectedRowIndexes can only have one item in it\r\n     */\r\n    multiSelect: boolean;\r\n\r\n    /**\r\n     * if the foundset is large and on server-side only part of it is loaded (so\r\n     * there are records in the foundset beyond 'serverSize') this is set to true;\r\n     * in this way you know you can load records even after 'serverSize' (requesting\r\n     * viewport to load records at index serverSize-1 or greater will load more\r\n     * records in the foundset)\r\n     */\r\n    hasMoreRows: boolean;\r\n\r\n    /**\r\n     * columnFormats is only present if you specify\r\n     * \"provideColumnFormats\": true inside the .spec file for this foundset property;\r\n     * it gives the default column formatting that Servoy would normally use for\r\n     * each column of the viewport - which you can then also use in the\r\n     * browser yourself; keys are the dataprovider names and values are objects that contain\r\n     * the format contents\r\n     */\r\n    columnFormats: Record<string, any>;\r\n}\r\n\r\nexport interface IFoundset extends IFoundsetFieldsOnly {\r\n\r\n    /**\r\n     * Request a change of viewport bounds from the server; the requested data will be loaded\r\n     * asynchronously in 'viewPort'\r\n     *\r\n     * @param startIndex the index that you request the first record in \"viewPort.rows\" to have in\r\n     *                   the real foundset (so the beginning of the viewPort).\r\n     * @param size the number of records to load in viewPort.\r\n     *\r\n     * @return a promise that will get resolved when the requested records arrived browser-\r\n     *                   side. As with any promise you can register success, error callbacks, finally, ...\r\n     */\r\n    loadRecordsAsync(startIndex: number, size: number): Promise<any>;\r\n\r\n    /**\r\n     * Request more records for your viewPort; if the argument is positive more records will be\r\n     * loaded at the end of the 'viewPort', when negative more records will be loaded at the beginning\r\n     * of the 'viewPort' - asynchronously.\r\n     *\r\n     * @param negativeOrPositiveCount the number of records to extend the viewPort.rows with before or\r\n     *                                after the currently loaded records.\r\n     * @param dontNotifyYet if you set this to true, then the load request will not be sent to server\r\n     *                      right away. So you can queue multiple loadLess/loadExtra before sending them\r\n     *                      to server. If false/undefined it will send this (and any previously queued\r\n     *                      request) to server. See also notifyChanged(). See also notifyChanged().\r\n     *\r\n     * @return a promise that will get resolved when the requested records arrived browser-\r\n     *                   side. As with any promise you can register success, error callbacks, finally, ...\r\n     *                   That allows custom component to make sure that loadExtra/loadLess calls from\r\n     *                   client do not stack on not yet updated viewports to result in wrong bounds.\r\n     */\r\n    loadExtraRecordsAsync(negativeOrPositiveCount: number, dontNotifyYet?: boolean): Promise<any>;\r\n\r\n    /**\r\n     * Request a shrink of the viewport; if the argument is positive the beginning of the viewport will\r\n     * shrink, when it is negative then the end of the viewport will shrink - asynchronously.\r\n     *\r\n     * @param negativeOrPositiveCount the number of records to shrink the viewPort.rows by before or\r\n     *                                after the currently loaded records.\r\n     * @param dontNotifyYet if you set this to true, then the load request will not be sent to server\r\n     *                      right away. So you can queue multiple loadLess/loadExtra before sending them\r\n     *                      to server. If false/undefined it will send this (and any previously queued\r\n     *                      request) to server. See also notifyChanged(). See also notifyChanged().\r\n     *\r\n     * @return a promise that will get resolved when the requested records arrived browser\r\n     *                   -side. As with any promise you can register success, error callbacks, finally, ...\r\n     *                   That allows custom component to make sure that loadExtra/loadLess calls from\r\n     *                   client do not stack on not yet updated viewports to result in wrong bounds.\r\n     */\r\n    loadLessRecordsAsync(negativeOrPositiveCount: number, dontNotifyYet?: boolean): Promise<any>;\r\n\r\n    /**\r\n     * If you queue multiple loadExtraRecordsAsync and loadLessRecordsAsync by using dontNotifyYet = true\r\n     * then you can - in the end - send all these requests to server (if any are queued) by calling\r\n     * this method. If no requests are queued, calling this method will have no effect.\r\n     */\r\n    notifyChanged(): void;\r\n\r\n    /**\r\n     * Sort the foundset by the dataproviders/columns identified by sortColumns.\r\n     *\r\n     * The name property of each sortColumn can be filled with the dataprovider name the foundset provides\r\n     * or specifies. If the foundset is used with a component type (like in table-view) then the name is\r\n     * the name of the component on who's first dataprovider property the sort should happen. If the\r\n     * foundset is used with another foundset-linked property type (dataprovider/tagstring linked to\r\n     * foundsets) then the name you should give in the sortColumn is that property's 'idForFoundset' value\r\n     * (for example a record 'dataprovider' property linked to the foundset will be an array of values\r\n     * representing the viewport, but it will also have a 'idForFoundset' prop. that can be used for\r\n     * sorting in this call; this 'idForFoundset' was added in version 8.0.3).\r\n     *\r\n     * @param sortColumns an array of JSONObjects { name : dataprovider_id,\r\n     *                    direction : sortDirection }, where the sortDirection can be \"asc\" or \"desc\".\r\n     * @return (added in Servoy 8.2.1) a promise that will get resolved when the new sort\r\n     *                   will arrive browser-side. As with any promise you can register success, error\r\n     *                   and finally callbacks.\r\n     */\r\n    sort(sortColumns: Array<{ name: string; direction: ('asc' | 'desc') }>): Promise<any>;\r\n\r\n    /**\r\n     * Request a selection change of the selected row indexes. Returns a promise that is resolved\r\n     * when the client receives the updated selection from the server. If successful, the array\r\n     * selectedRowIndexes will also be updated. If the server does not allow the selection change,\r\n     * the reject function will get called with the 'old' selection as parameter.\r\n     *\r\n     * If requestSelectionUpdate is called a second time, before the first call is resolved, the\r\n     * first call will be rejected and the caller will receive the string 'canceled' as the value\r\n     * for the parameter serverRows.\r\n     * E.g.: foundset.requestSelectionUpdate([2,3,4]).then(function(serverRows){},function(serverRows){});\r\n     */\r\n    requestSelectionUpdate(selectedRowIdxs: number[]): Promise<any>;\r\n\r\n    /**\r\n     * Sets the preferred viewPort options hint on the server for this foundset, so that the next\r\n     * (initial or new) load will automatically return that many rows, even without any of the loadXYZ\r\n     * methods above being called.\r\n     *\r\n     * You can use this when the component size is not known initially and the number of records the\r\n     * component wants to load depends on that. As soon as the component knows how many it wants\r\n     * initially it can call this method.\r\n     *\r\n     * These can also be specified initially using the .spec options \"initialPreferredViewPortSize\" and\r\n     * \"sendSelectionViewportInitially\". But these can be altered at runtime via this method as well\r\n     * because they are used/useful in other scenarios as well, not just initially: for example when a\r\n     * related foundset changes parent record, when a search/find is performed and so on.\r\n     *\r\n     * @param preferredSize the preferred number or rows that the viewport should get automatically\r\n     *                      from the server.\r\n     * @param sendViewportWithSelection if this is true, the auto-sent viewport will contain\r\n     *                                            the selected row (if any).\r\n     * @param centerViewportOnSelected if this is true, the selected row will be in the middle\r\n     *                                           of auto-sent viewport if possible. If it is false, then\r\n     *                                           the foundset property type will assume a 'paging'\r\n     *                                           strategy and will send the page that contains the\r\n     *                                           selected row (here the page size is assumed to be\r\n     *                                           preferredSize).\r\n     */\r\n    setPreferredViewportSize(preferredSize: number, sendViewportWithSelection?: boolean, centerViewportOnSelected?: boolean): void;\r\n\r\n    /**\r\n     * Receives a client side rowID (taken from myFoundsetProp.viewPort.rows[idx]._svyRowId)\r\n     * and gives a Record reference, an object\r\n     * which can be resolved server side to the exact Record via the 'record' property type;\r\n     * for example if you call a handler or a servoyapi.callServerSideApi(...) and want\r\n     * to give it a Record as parameter and you have the rowID and foundset in your code,\r\n     * you can use this method. E.g: servoyapi.callServerSideApi(\"doSomethingWithRecord\",\r\n     *                     [this.myFoundsetProperty.getRecordRefByRowID(clickedRowId)]);\r\n     *\r\n     * NOTE: if in your component you know the whole row (so myFoundsetProp.viewPort.rows[idx])\r\n     * already - not just the rowID - that you want to send you can just give that directly to the\r\n     * handler/serverSideApi; you do not need to use this method in that case. E.g:\r\n     * // if you have the index inside the viewport\r\n     * servoyapi.callServerSideApi(\"doSomethingWithRecord\",\r\n     *           [this.myFoundsetProperty.viewPort.rows[clickedRowIdx]]);\r\n     * // or if you have the row directly\r\n     * servoyapi.callServerSideApi(\"doSomethingWithRecord\", [clickedRow]);\r\n     *\r\n     * This method has been added in Servoy 8.3.\r\n     */\r\n    getRecordRefByRowID(rowId: string): void;\r\n\r\n    /**\r\n     * Adds a change listener that will get triggered when server sends changes for this foundset.\r\n     *\r\n     * @see WebsocketSession.addIncomingMessageHandlingDoneTask if you need your code to execute after all properties that were linked to this foundset\r\n                 get their changes applied you can use WebsocketSession.addIncomingMessageHandlingDoneTask.\r\n     * @param changeListener the listener to register.\r\n     */\r\n    addChangeListener(changeListener: FoundsetChangeListener): () => void;\r\n    removeChangeListener(changeListener: FoundsetChangeListener): void;\r\n\r\n    /**\r\n     * Mark the foundset data as changed on the client.\r\n     * If push to server is allowed for this foundset then the changes will be sent to the server, othwerwise the changes are ignored.\r\n     *\r\n     * @param index is the row index (relative to the viewport) where the data change occurred\r\n     * @param columnID the name of the column\r\n     * @param newValue the new value\r\n     * @param oldValue the old value, is optional; the change is ignored if the oldValue is the same as the newValue\r\n     */\r\n    columnDataChanged(index: number, columnID: string, newValue: any, oldValue?: any): void;\r\n\r\n}\r\n\r\nexport interface ViewportChangeEvent {\r\n    // the following keys appear if each of these got updated from server; the names of those\r\n    // keys suggest what it was that changed; oldValue and newValue are the values for what changed\r\n    // (e.g. new server size and old server size) so not the whole foundset property new/old value\r\n    viewportRowsCompletelyChanged?: { oldValue: any[]; newValue: any[] };\r\n\r\n    // if we received add/remove/change operations on a set of rows from the viewport, this key\r\n    // will be set; as seen below, it contains \"updates\" which is an array that holds a sequence of\r\n    // granular update operations to the viewport; the array will hold one or more granular add or remove\r\n    // or update operations;\r\n    // all the \"startIndex\" and \"endIndex\" values below are relative to the viewport's state after all\r\n    // previous updates in the array were already processed (so they are NOT relative to the initial state);\r\n    // indexes are 0 based\r\n    viewportRowsUpdated?: ViewportRowUpdates;\r\n}\r\n\r\nexport interface FoundsetChangeEvent extends ViewportChangeEvent {\r\n    /**\r\n     * If the previous value was non-null, had listeners and a full value update was\r\n     * received from server, this key is set on the change event; if newValue is non-null, it will keep the same reference as before;\r\n     * it will just update it's contents; oldValue will be a dummy shallow copy of old value contents\r\n     */\r\n    fullValueChanged?: { oldValue: IFoundsetFieldsOnly; newValue: IFoundset };\r\n\r\n    // the following keys appear if each of these got updated from server; the names of those\r\n    // keys suggest what it was that changed; oldValue and newValue are the values for what changed\r\n    // (e.g. new server size and old server size) so not the whole foundset property new/old value\r\n    serverFoundsetSizeChanged?: { oldValue: number; newValue: number };\r\n    hasMoreRowsChanged?: { oldValue: boolean; newValue: boolean };\r\n    multiSelectChanged?: { oldValue: boolean; newValue: boolean };\r\n    columnFormatsChanged?: { oldValue: Record<string, object>; newValue: Record<string, object> };\r\n    sortColumnsChanged?: { oldValue: string; newValue: string };\r\n    selectedRowIndexesChanged?: { oldValue: number[]; newValue: number[] };\r\n    viewPortStartIndexChanged?: { oldValue: number; newValue: number };\r\n    viewPortSizeChanged?: { oldValue: number; newValue: number };\r\n    userSetSelection?: boolean;\r\n}\r\n\r\nexport type ChangeListener = (changeEvent: ViewportChangeEvent) => void;\r\nexport type FoundsetChangeListener = (changeEvent: FoundsetChangeEvent) => void;\r\n\r\nexport interface ViewportRowUpdate { type: ChangeType; startIndex: number; endIndex: number }\r\nexport type ViewportRowUpdates = ViewportRowUpdate[];\r\n\r\nexport enum ChangeType  {\r\n    ROWS_CHANGED = 0,\r\n\r\n    /**\r\n     * When an INSERT happened but viewport size remained the same, it is\r\n     * possible that some of the rows that were previously at the end of the viewport\r\n     * slided out of it;\r\n     * NOTE: insert signifies an insert into the client viewport, not necessarily\r\n     * an insert in the foundset itself; for example calling \"loadExtraRecordsAsync\"\r\n     * can result in an insert notification + bigger viewport size notification\r\n     */\r\n    ROWS_INSERTED,\r\n\r\n    /**\r\n     * When a DELETE happened inside the viewport but there were more rows available in the\r\n     * foundset after current viewport, it is possible that some of those rows\r\n     * slided into the viewport;\r\n     * NOTE: delete signifies a delete from the client viewport, not necessarily\r\n     * a delete in the foundset itself; for example calling \"loadLessRecordsAsync\" can\r\n     * result in a delete notification + smaller viewport size notification\r\n     */\r\n    ROWS_DELETED\r\n}\r\n\r\nexport class BaseCustomObject implements ICustomObject {\r\n    private state = new BaseCustomObjectState();\r\n\r\n    constructor() {\r\n        this.state.allChanged = true;\r\n    }\r\n\r\n    public getStateHolder() {\r\n        return this.state;\r\n    }\r\n\r\n    /**\r\n     *  subclasses can override this to give back the properties that needs to be watched.\r\n     */\r\n    getWatchedProperties(): Array<string> {\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nexport interface ViewPort {\r\n    startIndex: number;\r\n    size: number;\r\n    rows: ViewPortRow[];\r\n};\r\n\r\nexport interface ViewPortRow extends Record<string, any> {\r\n    _svyRowId: string;\r\n    _cache?: Map<string, any>;\r\n}\r\n\r\nexport class ChangeAwareState {\r\n\r\n    public allChanged = false;\r\n\r\n    private changeListener: () => void;\r\n    private inNotify = false;\r\n\r\n    markAllChanged(notifyListener: boolean): void {\r\n        this.allChanged = true;\r\n        if (notifyListener) this.notifyChangeListener();\r\n    }\r\n\r\n    hasChanges(): boolean {\r\n        return this.allChanged || this.inNotify;\r\n    }\r\n\r\n    setChangeListener(callback: () => void): void {\r\n        this.changeListener = callback;\r\n    }\r\n\r\n    public notifyChangeListener(): void {\r\n        this.inNotify = true;\r\n        if (this.changeListener) this.changeListener();\r\n        this.inNotify = false;\r\n    }\r\n\r\n}\r\n\r\nexport class BaseCustomObjectState extends ChangeAwareState {\r\n\r\n    // provide a hash that lets arrays that contain custom objects know that the object has changed or not\r\n    private static counter = 0;\r\n\r\n    public conversionInfo = {};\r\n    public ignoreChanges = false;\r\n\r\n\r\n    private change = 0;\r\n    private hash = BaseCustomObjectState.counter++;\r\n\r\n    private changedKeys = new Set<string | number>();\r\n\r\n    hasChanges() {\r\n        return super.hasChanges() || this.getChangedKeys().size > 0; // leave this as a method call as some subclasses might compute the changedKeys inside getChangedKeys()\r\n    }\r\n\r\n    public setPropertyAndHandleChanges(_thisBaseCustoomObject, internalPropertyName, propertyName, value) {\r\n        const oldValue = _thisBaseCustoomObject[internalPropertyName];\r\n\r\n        // if the value of this property is changed, mark it as such and notify if needed\r\n        this.markIfChanged(propertyName, value, oldValue);\r\n\r\n        // unregister as listener to old value if needed\r\n        this.setChangeListenerToSubValueIfNeeded(oldValue, undefined);\r\n\r\n        _thisBaseCustoomObject[internalPropertyName] = value;\r\n\r\n        // register as listener to new value if needed\r\n        this.setChangeListenerToSubValueIfNeeded(value, () => {\r\n            this.markIfChanged(propertyName, value, value);\r\n        });\r\n\r\n        // this value has changed by reference; so it needs to be fully sent to server - except for when it now arrived from the server and is being set (in which case ignoreChanges is true)\r\n        if (!this.ignoreChanges && instanceOfChangeAwareValue(value)) value.getStateHolder().markAllChanged(false);\r\n    }\r\n\r\n    public getChangedKeys(): Set<string | number> {\r\n        return this.changedKeys;\r\n    }\r\n\r\n    public clearChanges() {\r\n        this.changedKeys.clear();\r\n        this.allChanged = false;\r\n    }\r\n\r\n    public getHashKey(): string {\r\n        return this.hash + '_' + this.change;\r\n    }\r\n\r\n    protected markIfChanged(propertyName: string | number, newObject: any, oldObject: any) {\r\n        if (this.testChanged(propertyName, newObject, oldObject)) {\r\n            this.pushChange(propertyName);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private setChangeListenerToSubValueIfNeeded(value: any, changeListener: () => void): void {\r\n        if (instanceOfChangeAwareValue(value)) {\r\n            // child is able to handle it's own change mechanism\r\n            value.getStateHolder().setChangeListener(changeListener);\r\n        }\r\n    }\r\n\r\n    private pushChange(propertyName) {\r\n        if (this.ignoreChanges) return;\r\n        if (this.changedKeys.size === 0) this.change++;\r\n\r\n        if (!this.changedKeys.has(propertyName)) {\r\n            this.changedKeys.add(propertyName);\r\n            this.notifyChangeListener();\r\n        }\r\n    }\r\n\r\n    private testChanged(propertyName: string | number, newObject: any, oldObject: any) {\r\n        if (newObject !== oldObject) return true;\r\n        if (typeof newObject == 'object') {\r\n            if (instanceOfChangeAwareValue(newObject)) {\r\n                return newObject.getStateHolder().hasChanges();\r\n            } else {\r\n                return isChanged(newObject, oldObject, this.conversionInfo[propertyName]);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class ArrayState extends BaseCustomObjectState {\r\n    private differ: IterableDiffer<Array<any>>;\r\n\r\n    constructor(private array: Array<any>, private iterableDiffers: IterableDiffers) {\r\n        super();\r\n        this.allChanged = true;\r\n    }\r\n\r\n    public initDiffer() {\r\n        this.differ = this.iterableDiffers.find(this.array).create((index: number, item: any) => {\r\n            if (instanceOfBaseCustomObject(item)) {\r\n                return item.getStateHolder().getHashKey();\r\n            }\r\n            return item;\r\n        });\r\n        this.differ.diff(this.array);\r\n    }\r\n\r\n    public clearChanges() {\r\n        super.clearChanges();\r\n        this.initDiffer();\r\n    }\r\n\r\n    public getChangedKeys(): Set<string | number> {\r\n        let changes = super.getChangedKeys();\r\n        const arrayChanges = this.differ.diff(this.array);\r\n        if (arrayChanges) {\r\n            let addedOrRemoved = 0;\r\n            arrayChanges.forEachAddedItem((record) => {\r\n                addedOrRemoved++;\r\n                changes.add(record.currentIndex);\r\n            });\r\n            arrayChanges.forEachRemovedItem((record) => {\r\n                addedOrRemoved--;\r\n                changes.add(record.previousIndex);\r\n            });\r\n\r\n            arrayChanges.forEachMovedItem((record) => {\r\n                if (instanceOfChangeAwareValue(record.item)) {\r\n                    return record.item.getStateHolder().markAllChanged(false);\r\n                }\r\n            });\r\n            if (addedOrRemoved !== 0) {\r\n                // size changed, for now send whole array\r\n                this.markAllChanged(false);\r\n            } else {\r\n                const changesArray = Array.from(changes);\r\n                changesArray.sort((a: number, b: number) => a - b);\r\n                changes = new Set(changesArray);\r\n            }\r\n        }\r\n        return changes;\r\n    }\r\n\r\n}\r\n\r\nexport interface ColumnRef {\r\n    _svyRowId: string;\r\n    dp: string;\r\n    value: string;\r\n};\r\n\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { TooltipDirective } from './tooltip/tooltip.directive';\r\nimport { TooltipService } from './tooltip/tooltip.service';\r\nimport { DecimalkeyconverterDirective } from './directives/decimalkeyconverter.directive';\r\nimport { MnemonicletterFilterPipe, NotNullOrEmptyPipe, HtmlFilterPipe, TrustAsHtmlPipe} from './format/pipes';\r\nimport { FormatFilterPipe } from './format/format.pipe';\r\nimport { EmptyValueFilterPipe } from './format/emptyvalue.pipe';\r\nimport { StartEditDirective } from './directives/startedit.directive';\r\nimport { ImageMediaIdDirective } from './directives/imagemediaid.directive';\r\nimport {AutosaveDirective } from './directives/autosave.directive';\r\nimport { UploadDirective } from './directives/upload.directive';\r\nimport { FormatDirective } from './format/formatcontrolvalueaccessor.directive';\r\nimport { FormattingService } from './format/formatting.service';\r\nimport { ComponentContributor } from './basecomponent';\r\nimport { SabloTabseq } from './directives/sablotabseq.directive';\r\nimport { WindowRefService } from './services/windowref.service';\r\nimport { SpecTypesService } from './spectypes.service';\r\nimport { LoggerFactory } from './logger.service';\r\n\r\n@NgModule({\r\n    declarations: [ TooltipDirective,\r\n                    MnemonicletterFilterPipe,\r\n                    NotNullOrEmptyPipe,\r\n                    HtmlFilterPipe,\r\n                    FormatDirective,\r\n                    DecimalkeyconverterDirective,\r\n                    FormatFilterPipe,\r\n                    EmptyValueFilterPipe,\r\n                    StartEditDirective,\r\n                    ImageMediaIdDirective,\r\n                    AutosaveDirective,\r\n                    UploadDirective,\r\n                    SabloTabseq,\r\n                    TrustAsHtmlPipe\r\n                  ],\r\n    imports: [],\r\n    exports: [TooltipDirective,\r\n              MnemonicletterFilterPipe,\r\n              NotNullOrEmptyPipe,\r\n              HtmlFilterPipe,\r\n              FormatDirective,\r\n              DecimalkeyconverterDirective,\r\n              FormatFilterPipe,\r\n              EmptyValueFilterPipe,\r\n              StartEditDirective,\r\n              ImageMediaIdDirective,\r\n              AutosaveDirective,\r\n              UploadDirective,\r\n              SabloTabseq,\r\n              TrustAsHtmlPipe\r\n             ],\r\n    providers: [ TooltipService, FormattingService, ComponentContributor, SpecTypesService, WindowRefService, LoggerFactory ]\r\n})\r\nexport class ServoyPublicModule { }\r\n","import { Renderer2 } from '@angular/core';\r\n\r\nconst scrollbarConstants = {\r\n        SCROLLBARS_WHEN_NEEDED: 0,\r\n        VERTICAL_SCROLLBAR_AS_NEEDED: 1,\r\n        VERTICAL_SCROLLBAR_ALWAYS: 2,\r\n        VERTICAL_SCROLLBAR_NEVER: 4,\r\n        HORIZONTAL_SCROLLBAR_AS_NEEDED: 8,\r\n        HORIZONTAL_SCROLLBAR_ALWAYS: 16,\r\n        HORIZONTAL_SCROLLBAR_NEVER: 32\r\n};\r\nexport class PropertyUtils {\r\n\r\n    public static setHorizontalAlignment( element: any, renderer: Renderer2, halign ) {\r\n        if ( halign !== -1 ) {\r\n            if ( halign === 0 ) {\r\n                renderer.setStyle( element, 'text-align', 'center' );\r\n            } else if ( halign === 4 ) {\r\n                renderer.setStyle( element, 'text-align', 'right' );\r\n            } else {\r\n                renderer.setStyle( element, 'text-align', 'left' );\r\n            }\r\n        }\r\n    }\r\n\r\n    public static setRotation(element: HTMLElement, renderer: Renderer2, rotation: number, size: {width: number; height: number}) {\r\n        const r = 'rotate(' + rotation + 'deg)';\r\n        renderer.setStyle( element, '-moz-transform',  r );\r\n        renderer.setStyle( element, '-webkit-transform', r );\r\n        renderer.setStyle( element, '-o-transform', r );\r\n        renderer.setStyle( element, '-ms-transform', r );\r\n        renderer.setStyle( element, 'transform', r );\r\n        renderer.setStyle( element, 'position', 'absolute' );\r\n        if (rotation === 90 || rotation === 270) {\r\n            renderer.setStyle( element, 'width', size.height + 'px' );\r\n            renderer.setStyle( element, 'height', size.width + 'px' );\r\n            renderer.setStyle( element, 'left', (size.width - size.height) / 2 + 'px' );\r\n            renderer.setStyle( element, 'top', (size.height - size.width) / 2 + 'px' );\r\n        }\r\n    }\r\n\r\n    public static setBorder( element: any, renderer: Renderer2, newVal ) {\r\n        if ( typeof newVal !== 'object' || newVal == null ) {\n         renderer.removeStyle( element, 'border' ); return;\n        }\r\n\r\n        if ( renderer.parentNode( element ).nodeName === 'FIELDSET' ) {\r\n            // unwrap fieldset\r\n            const parent = renderer.parentNode( element );\r\n            renderer.insertBefore( renderer.parentNode( parent ), element, parent );\r\n            renderer.removeChild( renderer.parentNode( parent ), parent );\r\n        }\r\n        if ( newVal.type === 'TitledBorder' ) {\r\n            const fieldset = renderer.createElement( 'fieldset' );\r\n            renderer.setAttribute( fieldset, 'style', 'padding:1px;margin:0px;border:1px solid silver;width:100%;height:100%' );\r\n\r\n            const legend = renderer.createElement( 'legend' );\r\n            renderer.setAttribute( legend, 'style', 'border-bottom:0px; margin:0px;width:auto;color:' + newVal.color + ';text-align:' + newVal.titleJustification );\r\n            if ( newVal.font ) {\r\n                for ( const key of Object.keys(newVal.font) ) {\r\n                    // keys like 'fontSize' need to be converted into 'font-size'\r\n                    renderer.setStyle( legend, key.replace( /([a-z])([A-Z])/g, '$1-$2' ).toLowerCase(), newVal.font[key] );\r\n                }\r\n            }\r\n            renderer.appendChild( legend, renderer.createText( newVal.title ) );\r\n\r\n            // this is the way it is done in the old ngclient, but the actual component is positioned partially outside the border\r\n            //            var parent = renderer.parentNode(element);\r\n            //            renderer.insertBefore(parent, fieldset, element);\r\n            //            renderer.appendChild(fieldset, legend);\r\n            //            renderer.appendChild(fieldset, element);\r\n\r\n            renderer.appendChild( fieldset, legend );\r\n            for ( const i in element.childNodes ) {\r\n                if ( element.childNodes[i].nodeType === 1 ) {\r\n                    renderer.appendChild( fieldset, element.childNodes[i] );\r\n                }\r\n            }\r\n            renderer.appendChild( element, fieldset );\r\n\r\n        } else if ( newVal.borderStyle ) {\r\n            renderer.removeStyle( element, 'border' );\r\n            for ( const key of Object.keys(newVal.borderStyle) ) {\r\n                renderer.setStyle( element, key.replace( /([a-z])([A-Z])/g, '$1-$2' ).toLowerCase(), newVal.borderStyle[key] );\r\n            }\r\n        }\r\n    }\r\n\r\n    public static setFont( element: any, renderer: Renderer2, newVal ) {\r\n        if ( typeof newVal !== 'object' || newVal == null ) {\n renderer.removeStyle( element, 'font' ); return;\n}\r\n\r\n        renderer.removeStyle( element, 'font' );\r\n        for ( const key of Object.keys( newVal) ) {\r\n            renderer.setStyle( element, key , newVal[key] );\r\n        }\r\n    }\r\n\r\n    public static setVisible( element: any, renderer: Renderer2, newVal ) {\r\n        let correctElement = element;\r\n        if (renderer.parentNode(renderer.parentNode(element)) === element.closest('.svy-wrapper')) {\r\n            correctElement = renderer.parentNode(renderer.parentNode(element));\r\n        }\r\n        if ( newVal === true ) {\r\n            // can we improve this ?\r\n            renderer.removeStyle( correctElement, 'display' );\r\n        } else if (newVal === false) {\r\n            renderer.setStyle( correctElement, 'display' , 'none' );\r\n        }\r\n    }\r\n\r\n    public static addSelectOnEnter( element: any, renderer: Renderer2, doc: Document ) {\r\n        renderer.listen( element, 'focus', () => {\r\n            setTimeout(() => {\r\n                // this access \"document\" directly which shoudn't really be done, but angular doesn't have encapsuled support for testing \"is(\":focus\")\"\r\n                const currentFocusedElement = doc.querySelector( ':focus' );\r\n                if ( currentFocusedElement === element )\r\n                    element.select();\r\n            }, 0 );\r\n        } );\r\n    }\r\n    public static getScrollbarsStyleObj(scrollbars: number) {\r\n       const style = {};\r\n       /* eslint-disable no-bitwise */\r\n       if ((scrollbars & scrollbarConstants.HORIZONTAL_SCROLLBAR_NEVER) === scrollbarConstants.HORIZONTAL_SCROLLBAR_NEVER) {\r\n         style['overflowX'] = 'hidden';\r\n       } else if ((scrollbars & scrollbarConstants.HORIZONTAL_SCROLLBAR_ALWAYS) === scrollbarConstants.HORIZONTAL_SCROLLBAR_ALWAYS) {\r\n         style['overflowX'] = 'scroll';\r\n       } else {\r\n         style['overflowX'] = 'auto';\r\n       }\r\n\r\n       if ((scrollbars & scrollbarConstants.VERTICAL_SCROLLBAR_NEVER) === scrollbarConstants.VERTICAL_SCROLLBAR_NEVER) {\r\n         style['overflowY'] = 'hidden';\r\n       } else if ((scrollbars & scrollbarConstants.VERTICAL_SCROLLBAR_ALWAYS) === scrollbarConstants.VERTICAL_SCROLLBAR_ALWAYS) {\r\n         style['overflowY'] = 'scroll'; // $NON-NLS-1$\r\n       } else {\r\n         style['overflowY'] = 'auto'; // $NON-NLS-1$\r\n       }\r\n       /* eslint-enable no-bitwise */\r\n       return style;\r\n     }\r\n\r\n     public static setScrollbars(element: any, renderer: Renderer2, value) {\r\n       const style = this.getScrollbarsStyleObj(value);\r\n       Object.keys(style).forEach(key => {\r\n        renderer.setStyle(element, key, style[key]);\r\n       });\r\n     }\r\n     // internal function\r\n     public static getPropByStringPath(o, s) {\r\n       s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\r\n       s = s.replace(/^\\./, '');           // strip a leading dot\r\n       const a = s.split('.');\r\n       while (a.length) {\r\n         const n = a.shift();\r\n         if (n in o) {\r\n           o = o[n];\r\n         } else {\r\n           return;\r\n         }\r\n         return o;\r\n       }\r\n     }\r\n}\r\n","import { DateTime } from 'luxon';\r\n\r\n/**\n * Returns a zero-based index for first day of the week, as used by the specified locale\n * e.g. Sunday (returns 0), or Monday (returns 1)\n *\n * @param locale\n * @returns\n */\r\nexport  const getFirstDayOfWeek = (locale: string): number  => {\r\n    // from http://www.unicode.org/cldr/data/common/supplemental/supplementalData.xml:supplementalData/weekData/firstDay\r\n    const firstDay = {/*default is 1=Monday*/\r\n        bd: 5,\r\n        mv: 5,\r\n        ae: 6,\r\n        af: 6,\r\n        bh: 6,\r\n        dj: 6,\r\n        dz: 6,\r\n        eg: 6,\r\n        iq: 6,\r\n        ir: 6,\r\n        jo: 6,\r\n        kw: 6,\r\n        ly: 6,\r\n        ma: 6,\r\n        om: 6,\r\n        qa: 6,\r\n        sa: 6,\r\n        sd: 6,\r\n        sy: 6,\r\n        ye: 6,\r\n        ag: 0,\r\n        ar: 0,\r\n        as: 0,\r\n        au: 0,\r\n        br: 0,\r\n        bs: 0,\r\n        bt: 0,\r\n        bw: 0,\r\n        by: 0,\r\n        bz: 0,\r\n        ca: 0,\r\n        cn: 0,\r\n        co: 0,\r\n        dm: 0,\r\n        do: 0,\r\n        et: 0,\r\n        gt: 0,\r\n        gu: 0,\r\n        hk: 0,\r\n        hn: 0,\r\n        id: 0,\r\n        ie: 0,\r\n        il: 0,\r\n        in: 0,\r\n        jm: 0,\r\n        jp: 0,\r\n        ke: 0,\r\n        kh: 0,\r\n        kr: 0,\r\n        la: 0,\r\n        mh: 0,\r\n        mm: 0,\r\n        mo: 0,\r\n        mt: 0,\r\n        mx: 0,\r\n        mz: 0,\r\n        ni: 0,\r\n        np: 0,\r\n        nz: 0,\r\n        pa: 0,\r\n        pe: 0,\r\n        ph: 0,\r\n        pk: 0,\r\n        pr: 0,\r\n        py: 0,\r\n        sg: 0,\r\n        sv: 0,\r\n        th: 0,\r\n        tn: 0,\r\n        tt: 0,\r\n        tw: 0,\r\n        um: 0,\r\n        us: 0,\r\n        ve: 0,\r\n        vi: 0,\r\n        ws: 0,\r\n        za: 0,\r\n        zw: 0\r\n    };\r\n\r\n    const split = locale.split('-');\r\n    const country =split.length > 1?split[1].toLowerCase():split[0].toLowerCase();\r\n    const dow = firstDay[country];\r\n    return (dow === undefined) ? 1 : dow; /*Number*/\r\n};\r\n\r\n/**\n * Floors the specified date to the beginning of week.\n *\n * @param date\n * @returns\n */\r\nexport const floorToWeek = (date: DateTime): DateTime => {\r\n    const fd = getFirstDayOfWeek(date.locale);\r\n    const day = date.weekday % 7;   // convert to 0=sunday .. 6=saturday\r\n    const dayAdjust =  day >= fd ? -day + fd : -day + fd - 7;\r\n    return date.plus({days: dayAdjust});\r\n};\n","import { Injectable, NgModule } from '@angular/core';\r\nimport { EventLike, JSEvent } from '../jsevent';\r\nimport { IComponentCache, IFormCache, ServoyPublicService } from '../services/servoy_public.service';\r\nimport { ServoyPublicModule } from '../servoy_public.module';\r\n\r\n@Injectable()\r\nexport class ServoyPublicServiceTestingImpl extends ServoyPublicService {\r\n    private locale: string;\r\n    private messages: { [key: string]: string } = {};\r\n    private forms: { [key: string]: IFormCache } = {};\r\n\r\n    public addForm(name: string, formCache: IFormCache) {\r\n        this.forms[name] = formCache;\r\n    }\r\n\r\n    public getFormCacheByName(containedForm: string): IFormCache {\r\n        if (this.forms[containedForm]) return this.forms[containedForm];\r\n        const form: IFormCache= {\r\n            absolute: true,\r\n            size:  {width: 100, height: 100},\r\n            getComponent: (name: string) => {\r\n                const comp: IComponentCache = {\r\n                    name,\r\n                    model: {}\r\n                };\r\n                return comp;\r\n            }\r\n        };\r\n        return form;\r\n    }\r\n\r\n    public generateServiceUploadUrl(serviceName: string, apiFunctionName: string): string {\r\n         return 'resources/upload/1/svy_services/' + serviceName + '/' + apiFunctionName;\r\n    }\r\n\r\n    public generateUploadUrl(formname: string, componentName: string, propertyName: string): string {\r\n         return 'resources/upload/1' +\r\n            (formname ? '/' + formname : '') +\r\n            (componentName ? '/' + componentName : '') +\r\n            (propertyName ? '/' + propertyName : '');\r\n    }\r\n\r\n    public executeInlineScript<T>(formname: string, script: string, params: any[]): Promise<T> {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n\r\n    public addMessage(key: string, message: string) {\r\n        this.messages[key] = message;\r\n    }\r\n\r\n    public getI18NMessages(...keys: string[]): Promise<any> {\r\n        const resolvedMessages: {[key: string]: string } = {};\r\n        keys.forEach(key => resolvedMessages[key] = this.messages[key]?this.messages[key]:'');\r\n        return Promise.resolve(resolvedMessages); \r\n    }\r\n\r\n    public callService<T>(serviceName: string, methodName: string, argsObject: any, async?: boolean): Promise<T> {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    public setLocale(locale: string) {\r\n        this.locale = locale;\r\n    }\r\n    public getLocale(): string {\r\n        return this.locale ? this.locale : 'en';\r\n    }\r\n    public createJSEvent(event: EventLike, eventType: string, contextFilter?: string, contextFilterElement?: any): JSEvent {\r\n        const ev = new JSEvent();\r\n        ev.eventType = eventType;\r\n        ev.svyType = eventType;\r\n        ev.formName = 'test';\r\n        ev.elementName = 'test';\r\n        ev.timestamp = new Date().getTime();\r\n        return ev;\r\n    }\r\n    public showFileOpenDialog(title: string, multiselect: boolean, acceptFilter: string, url: string): void {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n\r\n}\r\n@NgModule({\r\n    declarations: [\r\n\r\n    ],\r\n    imports: [\r\n        ServoyPublicModule\r\n    ],\r\n    exports: [\r\n        ServoyPublicModule\r\n    ],\r\n    providers: [\r\n        ServoyPublicServiceTestingImpl, { provide: ServoyPublicService, useExisting: ServoyPublicServiceTestingImpl }\r\n    ],\r\n    schemas: [\r\n\r\n    ]\r\n})\r\nexport class ServoyPublicTestingModule { }\n","import { ChangeDetectorRef } from '@angular/core';\r\nimport { ComponentFixture } from '@angular/core/testing';\r\n\r\n// eslint-disable-next-line prefer-arrow/prefer-arrow-functions\r\nexport async function runOnPushChangeDetection<T>(cf: ComponentFixture<T>): Promise<any>{\r\n  const cd = cf.debugElement.injector.get<ChangeDetectorRef>(\r\n    ChangeDetectorRef as any\r\n  );\r\n  cd.detectChanges();\r\n  return cf.whenStable();\r\n}\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}