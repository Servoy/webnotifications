import { EventLike, JSEvent } from '../jsevent';
import * as i0 from "@angular/core";
export declare abstract class ServoyPublicService {
    abstract showFileOpenDialog(title: string, multiselect: boolean, acceptFilter: string, url: string): void;
    abstract createJSEvent(event: EventLike, eventType: string, contextFilter?: string, contextFilterElement?: any): JSEvent;
    abstract getLocale(): string;
    abstract callService<T>(serviceName: string, methodName: string, argsObject: any, async?: boolean): Promise<T>;
    abstract getI18NMessages(...keys: string[]): Promise<any>;
    abstract executeInlineScript<T>(formname: string, script: string, params: any[]): Promise<T>;
    abstract generateUploadUrl(formname: string, componentName: string, propertyName: string): string;
    abstract generateServiceUploadUrl(serviceName: string, apiFunctionName: string): string;
    abstract getFormCacheByName(containedForm: string): IFormCache;
    static ɵfac: i0.ɵɵFactoryDeclaration<ServoyPublicService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ServoyPublicService>;
}
export interface IFormCache {
    absolute: boolean;
    size: {
        width: number;
        height: number;
    };
    getComponent(name: string): IComponentCache;
}
export interface IComponentCache {
    name: string;
    model: {
        [property: string]: any;
    };
}
