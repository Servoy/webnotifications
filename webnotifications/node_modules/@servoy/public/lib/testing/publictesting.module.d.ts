import { EventLike, JSEvent } from '../jsevent';
import { IFormCache, ServoyPublicService } from '../services/servoy_public.service';
import * as i0 from "@angular/core";
import * as i1 from "../servoy_public.module";
export declare class ServoyPublicServiceTestingImpl extends ServoyPublicService {
    private locale;
    private messages;
    private forms;
    addForm(name: string, formCache: IFormCache): void;
    getFormCacheByName(containedForm: string): IFormCache;
    generateServiceUploadUrl(serviceName: string, apiFunctionName: string): string;
    generateUploadUrl(formname: string, componentName: string, propertyName: string): string;
    executeInlineScript<T>(formname: string, script: string, params: any[]): Promise<T>;
    addMessage(key: string, message: string): void;
    getI18NMessages(...keys: string[]): Promise<any>;
    callService<T>(serviceName: string, methodName: string, argsObject: any, async?: boolean): Promise<T>;
    setLocale(locale: string): void;
    getLocale(): string;
    createJSEvent(event: EventLike, eventType: string, contextFilter?: string, contextFilterElement?: any): JSEvent;
    showFileOpenDialog(title: string, multiselect: boolean, acceptFilter: string, url: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ServoyPublicServiceTestingImpl, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ServoyPublicServiceTestingImpl>;
}
export declare class ServoyPublicTestingModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<ServoyPublicTestingModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<ServoyPublicTestingModule, never, [typeof i1.ServoyPublicModule], [typeof i1.ServoyPublicModule]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<ServoyPublicTestingModule>;
}
