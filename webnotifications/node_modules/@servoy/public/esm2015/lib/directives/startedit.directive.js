import { Directive, Input, HostListener } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../logger.service";
export class StartEditDirective {
    constructor(logFactory) {
        this.log = logFactory.getLogger('StartEditDirective');
    }
    onFocus(e) {
        if (!this.hostComponent) {
            this.log.error('host component not found for the start edit directive use [hostComponent]="self" besides this in the template (component must be extending ServoyBaseComponent)');
        }
        else if (this.hostComponent.servoyApi && this.dataProviderID !== undefined) {
            this.hostComponent.servoyApi.startEdit(this.dataProviderID);
        }
        else {
            this.log.error('Can\'t call startEdit, missing servoyApi and dataProviderID for field ' + this.hostComponent);
        }
    }
}
StartEditDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0, type: StartEditDirective, deps: [{ token: i1.LoggerFactory }], target: i0.ɵɵFactoryTarget.Directive });
StartEditDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.0.2", type: StartEditDirective, selector: "[svyStartEdit]", inputs: { dataProviderID: ["svyStartEdit", "dataProviderID"], hostComponent: "hostComponent" }, host: { listeners: { "focus": "onFocus($event)" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.2", ngImport: i0, type: StartEditDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[svyStartEdit]'
                }]
        }], ctorParameters: function () { return [{ type: i1.LoggerFactory }]; }, propDecorators: { dataProviderID: [{
                type: Input,
                args: ['svyStartEdit']
            }], hostComponent: [{
                type: Input
            }], onFocus: [{
                type: HostListener,
                args: ['focus', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnRlZGl0LmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3NlcnZveS1wdWJsaWMvc3JjL2xpYi9kaXJlY3RpdmVzL3N0YXJ0ZWRpdC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRyxLQUFLLEVBQUcsWUFBWSxFQUFDLE1BQU0sZUFBZSxDQUFDOzs7QUFPaEUsTUFBTSxPQUFPLGtCQUFrQjtJQU83QixZQUFtQixVQUF5QjtRQUMxQyxJQUFJLENBQUMsR0FBRyxHQUFHLFVBQVUsQ0FBQyxTQUFTLENBQUMsb0JBQW9CLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRWtDLE9BQU8sQ0FBQyxDQUFhO1FBQ3RELElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLGlLQUFpSyxDQUFDLENBQUM7U0FDbkw7YUFBTSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxjQUFjLEtBQUssU0FBUyxFQUFFO1lBQzVFLElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDN0Q7YUFBTTtZQUNMLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLHdFQUF3RSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztTQUMvRztJQUNILENBQUM7OytHQW5CVSxrQkFBa0I7bUdBQWxCLGtCQUFrQjsyRkFBbEIsa0JBQWtCO2tCQUg5QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxnQkFBZ0I7aUJBQzNCO29HQUd3QixjQUFjO3NCQUFwQyxLQUFLO3VCQUFDLGNBQWM7Z0JBQ1osYUFBYTtzQkFBckIsS0FBSztnQkFRNkIsT0FBTztzQkFBekMsWUFBWTt1QkFBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUgLCBJbnB1dCAsIEhvc3RMaXN0ZW5lcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0xvZ2dlclNlcnZpY2UsIExvZ2dlckZhY3Rvcnl9IGZyb20gJy4uL2xvZ2dlci5zZXJ2aWNlJztcbmltcG9ydCB7IFNlcnZveUJhc2VDb21wb25lbnQgfSBmcm9tICcuLi9iYXNlY29tcG9uZW50JztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3N2eVN0YXJ0RWRpdF0nXG59KVxuZXhwb3J0IGNsYXNzIFN0YXJ0RWRpdERpcmVjdGl2ZSB7XG5cbiAgQElucHV0KCdzdnlTdGFydEVkaXQnKSBkYXRhUHJvdmlkZXJJRDogc3RyaW5nO1xuICBASW5wdXQoKSBob3N0Q29tcG9uZW50OiBTZXJ2b3lCYXNlQ29tcG9uZW50PEhUTUxFbGVtZW50PjtcblxuICBwcml2YXRlIGxvZzogTG9nZ2VyU2VydmljZTtcblxuICBwdWJsaWMgY29uc3RydWN0b3IobG9nRmFjdG9yeTogTG9nZ2VyRmFjdG9yeSkge1xuICAgIHRoaXMubG9nID0gbG9nRmFjdG9yeS5nZXRMb2dnZXIoJ1N0YXJ0RWRpdERpcmVjdGl2ZScpO1xuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcignZm9jdXMnLCBbJyRldmVudCddKSBvbkZvY3VzKGU6IEZvY3VzRXZlbnQpIHtcbiAgICBpZiAoIXRoaXMuaG9zdENvbXBvbmVudCkge1xuICAgICAgdGhpcy5sb2cuZXJyb3IoJ2hvc3QgY29tcG9uZW50IG5vdCBmb3VuZCBmb3IgdGhlIHN0YXJ0IGVkaXQgZGlyZWN0aXZlIHVzZSBbaG9zdENvbXBvbmVudF09XCJzZWxmXCIgYmVzaWRlcyB0aGlzIGluIHRoZSB0ZW1wbGF0ZSAoY29tcG9uZW50IG11c3QgYmUgZXh0ZW5kaW5nIFNlcnZveUJhc2VDb21wb25lbnQpJyk7XG4gICAgfSBlbHNlIGlmICh0aGlzLmhvc3RDb21wb25lbnQuc2Vydm95QXBpICYmIHRoaXMuZGF0YVByb3ZpZGVySUQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy5ob3N0Q29tcG9uZW50LnNlcnZveUFwaS5zdGFydEVkaXQodGhpcy5kYXRhUHJvdmlkZXJJRCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubG9nLmVycm9yKCdDYW5cXCd0IGNhbGwgc3RhcnRFZGl0LCBtaXNzaW5nIHNlcnZveUFwaSBhbmQgZGF0YVByb3ZpZGVySUQgZm9yIGZpZWxkICcgKyB0aGlzLmhvc3RDb21wb25lbnQpO1xuICAgIH1cbiAgfVxufVxuIl19