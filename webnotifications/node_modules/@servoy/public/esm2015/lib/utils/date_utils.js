/**
 * Returns a zero-based index for first day of the week, as used by the specified locale
 * e.g. Sunday (returns 0), or Monday (returns 1)
 *
 * @param locale
 * @returns
 */
export const getFirstDayOfWeek = (locale) => {
    // from http://www.unicode.org/cldr/data/common/supplemental/supplementalData.xml:supplementalData/weekData/firstDay
    const firstDay = {
        bd: 5,
        mv: 5,
        ae: 6,
        af: 6,
        bh: 6,
        dj: 6,
        dz: 6,
        eg: 6,
        iq: 6,
        ir: 6,
        jo: 6,
        kw: 6,
        ly: 6,
        ma: 6,
        om: 6,
        qa: 6,
        sa: 6,
        sd: 6,
        sy: 6,
        ye: 6,
        ag: 0,
        ar: 0,
        as: 0,
        au: 0,
        br: 0,
        bs: 0,
        bt: 0,
        bw: 0,
        by: 0,
        bz: 0,
        ca: 0,
        cn: 0,
        co: 0,
        dm: 0,
        do: 0,
        et: 0,
        gt: 0,
        gu: 0,
        hk: 0,
        hn: 0,
        id: 0,
        ie: 0,
        il: 0,
        in: 0,
        jm: 0,
        jp: 0,
        ke: 0,
        kh: 0,
        kr: 0,
        la: 0,
        mh: 0,
        mm: 0,
        mo: 0,
        mt: 0,
        mx: 0,
        mz: 0,
        ni: 0,
        np: 0,
        nz: 0,
        pa: 0,
        pe: 0,
        ph: 0,
        pk: 0,
        pr: 0,
        py: 0,
        sg: 0,
        sv: 0,
        th: 0,
        tn: 0,
        tt: 0,
        tw: 0,
        um: 0,
        us: 0,
        ve: 0,
        vi: 0,
        ws: 0,
        za: 0,
        zw: 0
    };
    const split = locale.split('-');
    const country = split.length > 1 ? split[1].toLowerCase() : split[0].toLowerCase();
    const dow = firstDay[country];
    return (dow === undefined) ? 1 : dow; /*Number*/
};
/**
 * Floors the specified date to the beginning of week.
 *
 * @param date
 * @returns
 */
export const floorToWeek = (date) => {
    const fd = getFirstDayOfWeek(date.locale);
    const day = date.weekday % 7; // convert to 0=sunday .. 6=saturday
    const dayAdjust = day >= fd ? -day + fd : -day + fd - 7;
    return date.plus({ days: dayAdjust });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZV91dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3NlcnZveS1wdWJsaWMvc3JjL2xpYi91dGlscy9kYXRlX3V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBOzs7Ozs7R0FNRztBQUNILE1BQU0sQ0FBRSxNQUFNLGlCQUFpQixHQUFHLENBQUMsTUFBYyxFQUFXLEVBQUU7SUFDMUQsb0hBQW9IO0lBQ3BILE1BQU0sUUFBUSxHQUFHO1FBQ2IsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO1FBQ0wsRUFBRSxFQUFFLENBQUM7UUFDTCxFQUFFLEVBQUUsQ0FBQztRQUNMLEVBQUUsRUFBRSxDQUFDO0tBQ1IsQ0FBQztJQUVGLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDaEMsTUFBTSxPQUFPLEdBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUEsQ0FBQyxDQUFBLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQSxDQUFDLENBQUEsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzlFLE1BQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM5QixPQUFPLENBQUMsR0FBRyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFVBQVU7QUFDcEQsQ0FBQyxDQUFDO0FBRUY7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxJQUFjLEVBQVksRUFBRTtJQUNwRCxNQUFNLEVBQUUsR0FBRyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDMUMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBRyxvQ0FBb0M7SUFDcEUsTUFBTSxTQUFTLEdBQUksR0FBRyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ3pELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFDLElBQUksRUFBRSxTQUFTLEVBQUMsQ0FBQyxDQUFDO0FBQ3hDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSAnbHV4b24nO1xyXG5cclxuLyoqXG4gKiBSZXR1cm5zIGEgemVyby1iYXNlZCBpbmRleCBmb3IgZmlyc3QgZGF5IG9mIHRoZSB3ZWVrLCBhcyB1c2VkIGJ5IHRoZSBzcGVjaWZpZWQgbG9jYWxlXG4gKiBlLmcuIFN1bmRheSAocmV0dXJucyAwKSwgb3IgTW9uZGF5IChyZXR1cm5zIDEpXG4gKlxuICogQHBhcmFtIGxvY2FsZVxuICogQHJldHVybnNcbiAqL1xyXG5leHBvcnQgIGNvbnN0IGdldEZpcnN0RGF5T2ZXZWVrID0gKGxvY2FsZTogc3RyaW5nKTogbnVtYmVyICA9PiB7XHJcbiAgICAvLyBmcm9tIGh0dHA6Ly93d3cudW5pY29kZS5vcmcvY2xkci9kYXRhL2NvbW1vbi9zdXBwbGVtZW50YWwvc3VwcGxlbWVudGFsRGF0YS54bWw6c3VwcGxlbWVudGFsRGF0YS93ZWVrRGF0YS9maXJzdERheVxyXG4gICAgY29uc3QgZmlyc3REYXkgPSB7LypkZWZhdWx0IGlzIDE9TW9uZGF5Ki9cclxuICAgICAgICBiZDogNSxcclxuICAgICAgICBtdjogNSxcclxuICAgICAgICBhZTogNixcclxuICAgICAgICBhZjogNixcclxuICAgICAgICBiaDogNixcclxuICAgICAgICBkajogNixcclxuICAgICAgICBkejogNixcclxuICAgICAgICBlZzogNixcclxuICAgICAgICBpcTogNixcclxuICAgICAgICBpcjogNixcclxuICAgICAgICBqbzogNixcclxuICAgICAgICBrdzogNixcclxuICAgICAgICBseTogNixcclxuICAgICAgICBtYTogNixcclxuICAgICAgICBvbTogNixcclxuICAgICAgICBxYTogNixcclxuICAgICAgICBzYTogNixcclxuICAgICAgICBzZDogNixcclxuICAgICAgICBzeTogNixcclxuICAgICAgICB5ZTogNixcclxuICAgICAgICBhZzogMCxcclxuICAgICAgICBhcjogMCxcclxuICAgICAgICBhczogMCxcclxuICAgICAgICBhdTogMCxcclxuICAgICAgICBicjogMCxcclxuICAgICAgICBiczogMCxcclxuICAgICAgICBidDogMCxcclxuICAgICAgICBidzogMCxcclxuICAgICAgICBieTogMCxcclxuICAgICAgICBiejogMCxcclxuICAgICAgICBjYTogMCxcclxuICAgICAgICBjbjogMCxcclxuICAgICAgICBjbzogMCxcclxuICAgICAgICBkbTogMCxcclxuICAgICAgICBkbzogMCxcclxuICAgICAgICBldDogMCxcclxuICAgICAgICBndDogMCxcclxuICAgICAgICBndTogMCxcclxuICAgICAgICBoazogMCxcclxuICAgICAgICBobjogMCxcclxuICAgICAgICBpZDogMCxcclxuICAgICAgICBpZTogMCxcclxuICAgICAgICBpbDogMCxcclxuICAgICAgICBpbjogMCxcclxuICAgICAgICBqbTogMCxcclxuICAgICAgICBqcDogMCxcclxuICAgICAgICBrZTogMCxcclxuICAgICAgICBraDogMCxcclxuICAgICAgICBrcjogMCxcclxuICAgICAgICBsYTogMCxcclxuICAgICAgICBtaDogMCxcclxuICAgICAgICBtbTogMCxcclxuICAgICAgICBtbzogMCxcclxuICAgICAgICBtdDogMCxcclxuICAgICAgICBteDogMCxcclxuICAgICAgICBtejogMCxcclxuICAgICAgICBuaTogMCxcclxuICAgICAgICBucDogMCxcclxuICAgICAgICBuejogMCxcclxuICAgICAgICBwYTogMCxcclxuICAgICAgICBwZTogMCxcclxuICAgICAgICBwaDogMCxcclxuICAgICAgICBwazogMCxcclxuICAgICAgICBwcjogMCxcclxuICAgICAgICBweTogMCxcclxuICAgICAgICBzZzogMCxcclxuICAgICAgICBzdjogMCxcclxuICAgICAgICB0aDogMCxcclxuICAgICAgICB0bjogMCxcclxuICAgICAgICB0dDogMCxcclxuICAgICAgICB0dzogMCxcclxuICAgICAgICB1bTogMCxcclxuICAgICAgICB1czogMCxcclxuICAgICAgICB2ZTogMCxcclxuICAgICAgICB2aTogMCxcclxuICAgICAgICB3czogMCxcclxuICAgICAgICB6YTogMCxcclxuICAgICAgICB6dzogMFxyXG4gICAgfTtcclxuXHJcbiAgICBjb25zdCBzcGxpdCA9IGxvY2FsZS5zcGxpdCgnLScpO1xyXG4gICAgY29uc3QgY291bnRyeSA9c3BsaXQubGVuZ3RoID4gMT9zcGxpdFsxXS50b0xvd2VyQ2FzZSgpOnNwbGl0WzBdLnRvTG93ZXJDYXNlKCk7XHJcbiAgICBjb25zdCBkb3cgPSBmaXJzdERheVtjb3VudHJ5XTtcclxuICAgIHJldHVybiAoZG93ID09PSB1bmRlZmluZWQpID8gMSA6IGRvdzsgLypOdW1iZXIqL1xyXG59O1xyXG5cclxuLyoqXG4gKiBGbG9vcnMgdGhlIHNwZWNpZmllZCBkYXRlIHRvIHRoZSBiZWdpbm5pbmcgb2Ygd2Vlay5cbiAqXG4gKiBAcGFyYW0gZGF0ZVxuICogQHJldHVybnNcbiAqL1xyXG5leHBvcnQgY29uc3QgZmxvb3JUb1dlZWsgPSAoZGF0ZTogRGF0ZVRpbWUpOiBEYXRlVGltZSA9PiB7XHJcbiAgICBjb25zdCBmZCA9IGdldEZpcnN0RGF5T2ZXZWVrKGRhdGUubG9jYWxlKTtcclxuICAgIGNvbnN0IGRheSA9IGRhdGUud2Vla2RheSAlIDc7ICAgLy8gY29udmVydCB0byAwPXN1bmRheSAuLiA2PXNhdHVyZGF5XHJcbiAgICBjb25zdCBkYXlBZGp1c3QgPSAgZGF5ID49IGZkID8gLWRheSArIGZkIDogLWRheSArIGZkIC0gNztcclxuICAgIHJldHVybiBkYXRlLnBsdXMoe2RheXM6IGRheUFkanVzdH0pO1xyXG59O1xuIl19